% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/coefplot.r
\name{coefplot}
\alias{coefplot}
\alias{plotcoef}
\alias{coefplot.default}
\alias{coefplot.data.frame}
\alias{coefplot.lm}
\alias{coefplot.glm}
\alias{coefplot.workflow}
\alias{coefplot.model_fit}
\alias{coefplot.rxGlm}
\alias{coefplot.rxLinMod}
\alias{coefplot.rxLogit}
\title{Dotplot for model coefficients}
\usage{
coefplot(model, ...)

\method{coefplot}{default}(
  model,
  title = "Coefficient Plot",
  xlab = "Value",
  ylab = "Coefficient",
  innerCI = 1,
  outerCI = 2,
  innerType = 1,
  outerType = 1,
  lwdInner = 1 + interactive * 2,
  lwdOuter = if (interactive) 1 else unname((Sys.info()["sysname"] != "Windows") * 0.5),
  pointSize = 3 + interactive * 5,
  color = "blue",
  shape = 16,
  cex = 0.8,
  textAngle = 0,
  numberAngle = 0,
  zeroColor = "grey",
  zeroLWD = 1,
  zeroType = 2,
  facet = FALSE,
  scales = "free",
  sort = c("natural", "magnitude", "alphabetical"),
  decreasing = FALSE,
  numeric = FALSE,
  fillColor = "grey",
  alpha = 1/2,
  horizontal = FALSE,
  factors = NULL,
  only = NULL,
  shorten = TRUE,
  intercept = TRUE,
  interceptName = "(Intercept)",
  coefficients = NULL,
  predictors = NULL,
  strict = FALSE,
  trans = identity,
  interactive = FALSE,
  newNames = NULL,
  plot = TRUE,
  ...
)

\method{coefplot}{data.frame}(
  model,
  title = "Coefficient Plot",
  xlab = "Value",
  ylab = "Coefficient",
  interactive = FALSE,
  lwdInner = 1 + interactive * 2,
  lwdOuter = if (interactive) 1 else unname((Sys.info()["sysname"] != "Windows") * 0.5),
  pointSize = 3 + interactive * 5,
  color = "blue",
  cex = 0.8,
  textAngle = 0,
  numberAngle = 0,
  shape = 16,
  innerType = 1,
  outerType = 1,
  outerCI = 2,
  innerCI = 1,
  multi = FALSE,
  zeroColor = "grey",
  zeroLWD = 1,
  zeroType = 2,
  numeric = FALSE,
  fillColor = "grey",
  alpha = 1/2,
  horizontal = FALSE,
  facet = FALSE,
  scales = "free",
  value = "Value",
  coefficient = "Coefficient",
  errorHeight = 0,
  dodgeHeight = 1,
  ...
)

\method{coefplot}{lm}(...)

\method{coefplot}{glm}(...)

\method{coefplot}{workflow}(model, ...)

\method{coefplot}{model_fit}(model, ...)

\method{coefplot}{rxGlm}(...)

\method{coefplot}{rxLinMod}(...)

\method{coefplot}{rxLogit}(...)
}
\arguments{
\item{model}{A data.frame like that built from coefplot(..., plot=FALSE)}

\item{\dots}{Further Arguments}

\item{title}{The name of the plot, if NULL then no name is given}

\item{xlab}{The x label}

\item{ylab}{The y label}

\item{innerCI}{How wide the inner confidence interval should be, normally 1 standard deviation.  If 0, then there will be no inner confidence interval.}

\item{outerCI}{How wide the outer confidence interval should be, normally 2 standard deviations.  If 0, then there will be no outer confidence interval.}

\item{innerType}{The type of the inner CI line, 0 will mean no line}

\item{outerType}{The type of the outer CI line, 0 will mean no line}

\item{lwdInner}{The thickness of the inner confidence interval}

\item{lwdOuter}{The thickness of the outer confidence interval}

\item{pointSize}{Size of coefficient point}

\item{color}{The color of the points and lines}

\item{shape}{The shape of the points}

\item{cex}{The text size multiplier, currently not used}

\item{textAngle}{The angle for the coefficient labels, 0 is horizontal}

\item{numberAngle}{The angle for the value labels, 0 is horizontal}

\item{zeroColor}{The color of the line indicating 0}

\item{zeroLWD}{The thickness of the 0 line}

\item{zeroType}{The type of 0 line, 0 will mean no line}

\item{facet}{logical; If the coefficients should be faceted by the variables, numeric coefficients (including the intercept) will be one facet}

\item{scales}{The way the axes should be treated in a faceted plot.  Can be c("fixed", "free", "free_x", "free_y")}

\item{sort}{Determines the sort order of the coefficients.  Possible values are c("natural", "magnitude", "alphabetical")}

\item{decreasing}{logical; Whether the coefficients should be ascending or descending}

\item{numeric}{logical; If true and factors has exactly one value, then it is displayed in a horizontal graph with continuous confidence bounds.}

\item{fillColor}{The color of the confidence bounds for a numeric factor}

\item{alpha}{The transparency level of the numeric factor's confidence bound}

\item{horizontal}{logical; If the plot should be displayed horizontally}

\item{factors}{Vector of factor variables that will be the only ones shown}

\item{only}{logical; If factors has a value this determines how interactions are treated.  True means just that variable will be shown and not its interactions.  False means interactions will be included. Currently not available.}

\item{shorten}{logical or character; If \code{FALSE} then coefficients for factor levels will include their variable name.  If \code{TRUE} coefficients for factor levels will be stripped of their variable names.  If a character vector of variables only coefficients for factor levels associated with those variables will the variable names stripped.  Currently not available.}

\item{intercept}{logical; Whether the Intercept coefficient should be plotted}

\item{interceptName}{Specifies name of intercept it case it is not the default of "(Intercept"). Currently not available.}

\item{coefficients}{A character vector specifying which factor coefficients to keep.  It will keep all levels and any interactions, even if those are not listed.}

\item{predictors}{A character vector specifying which coefficients to keep.  Each individual coefficient can be specified.  Use predictors to specify entire factors.}

\item{strict}{If TRUE then predictors will only be matched to its own coefficients, not its interactions}

\item{trans}{A transformation function to apply to the values and confidence intervals.  \code{identity} by default.  Use \code{invlogit} for binary regression.}

\item{interactive}{If `TRUE` an interactive plot is generated instead of `[ggplot2]`}

\item{newNames}{Named character vector of new names for coefficients}

\item{plot}{logical; If the plot should be drawn, if false then a data.frame of the values will be returned}

\item{multi}{logical; If this is for \code{\link{multiplot}} then leave the colors as determined by the legend, if FALSE then make all colors the same}

\item{value}{Name of variable for value metric}

\item{coefficient}{Name of variable for coefficient names}

\item{errorHeight}{Height of error bars}

\item{dodgeHeight}{Amount of vertical dodging}
}
\value{
A ggplot2 object or data.frame.  See details in \code{\link{coefplot.lm}} for more information

If \code{plot} is \code{TRUE} then a \code{\link{ggplot}} object is returned.  Otherwise a \code{\link{data.frame}} listing coefficients and confidence bands is returned.

a ggplot graph object
}
\description{
A graphical display of the coefficients and standard errors from a fitted model

\code{coefplot} is the S3 generic method for plotting the coefficients from a fitted model.

This can be extended with new methods for other types of models not currently available.

Dotplot for coefficients
}
\details{
A graphical display of the coefficients and standard errors from a fitted model, this function uses a data.frame as the input.
}
\examples{

data(diamonds)
head(diamonds)
model1 <- lm(price ~ carat + cut*color, data=diamonds)
model2 <- lm(price ~ carat*color, data=diamonds)
model3 <- glm(price > 10000 ~ carat*color, data=diamonds)
coefplot(model1)
coefplot(model2)
coefplot(model3)
coefplot(model1, predictors="color")
coefplot(model1, predictors="color", strict=TRUE)
coefplot(model1, coefficients=c("(Intercept)", "color.Q"))
coefplot(model1, predictors="cut", coefficients=c("(Intercept)", "color.Q"), strict=TRUE)
coefplot(model1, predictors="cut", coefficients=c("(Intercept)", "color.Q"), strict=FALSE)
coefplot(model1, predictors="cut", coefficients=c("(Intercept)", "color.Q"), 
strict=TRUE, newNames=c(color.Q="Color", "cut^4"="Fourth"))
coefplot(model1, predictors=c("(Intercept)", "carat"), newNames=c(carat="Size"))
coefplot(model1, predictors=c("(Intercept)", "carat"), 
newNames=c(carat="Size", "(Intercept)"="Constant"))


data(diamonds)
head(diamonds)
model1 <- lm(price ~ carat + cut*color, data=diamonds)
model2 <- lm(price ~ carat*color, data=diamonds)
coefplot(model1)
coefplot(model2)
coefplot(model1, predictors="color")
coefplot(model1, predictors="color", strict=TRUE)
coefplot(model1, coefficients=c("(Intercept)", "color.Q"))

data(diamonds)
head(diamonds)
model1 <- lm(price ~ carat + cut*color, data=diamonds)
model2 <- lm(price ~ carat*color, data=diamonds)
df1 <- coefplot(model1, plot=FALSE)
df2 <- coefplot(model2, plot=FALSE)
coefplot(df1)
coefplot(df2)


\dontrun{
data(diamonds)
mod3 <- rxLinMod(price ~ carat + cut + x, data=diamonds)
coefplot(mod3)
}
\dontrun{
data(diamonds)
mod6 <- rxLogit(price > 10000 ~ carat + cut + x, data=diamonds)
coefplot(mod6)
}
}
\seealso{
\code{\link{coefplot.lm}} \code{\link{coefplot.data.frame}}

\code{\link{lm}} \code{\link{glm}} \code{\link{ggplot}} \code{\link{coefplot}} \code{\link{plotcoef}}

\code{\link{coefplot}}
}
\author{
Jared P. Lander
}
\keyword{coefficient}
\keyword{coefficients}
\keyword{coefplot}
\keyword{dotplot}
\keyword{glm}
\keyword{linear}
\keyword{lm}
\keyword{model}
\keyword{rxLinMod}
