[{"path":"/articles/arguments.html","id":"default-arguments","dir":"Articles","previous_headings":"","what":"Default arguments","title":"Customising `coefplot`","text":"","code":"coefplot(model)"},{"path":[]},{"path":"/articles/arguments.html","id":"title-xlab-and-ylab","dir":"Articles","previous_headings":"Labels","what":"title, xlab, and ylab","title":"Customising `coefplot`","text":"","code":"coefplot(   model,   title = 'This is my `coefplot`',   xlab = 'Coefficient Values',   ylab = 'Variables' )"},{"path":"/articles/arguments.html","id":"textangle-and-numberangle","dir":"Articles","previous_headings":"Labels","what":"textAngle and numberAngle","title":"Customising `coefplot`","text":"","code":"coefplot(   model,   textAngle = 90,   numberAngle = 45 )"},{"path":[]},{"path":"/articles/arguments.html","id":"newnames","dir":"Articles","previous_headings":"Coefficients","what":"newNames","title":"Customising `coefplot`","text":"","code":"coefplot(   model,   newNames = c('cyl' = 'Cylinder', 'disp' = 'Displacement', 'wt' = 'Weight') )"},{"path":"/articles/arguments.html","id":"predictors-strict-and-coefficient","dir":"Articles","previous_headings":"Coefficients","what":"predictors, strict, and coefficient","title":"Customising `coefplot`","text":"","code":"coefplot(   model,   predictors = c('wt') ) coefplot(   model,   predictors = c('wt', 'disp'),   strict = TRUE ) coefplot(   model,   coefficient = c('wt', 'cyl') )"},{"path":"/articles/arguments.html","id":"innerciouterci-and-lwdinnerlwdouter-and-pointsize","dir":"Articles","previous_headings":"Coefficients","what":"innerCI/outerCI and lwdInner/lwdOuter and pointSize","title":"Customising `coefplot`","text":"","code":"coefplot(   model,   innerCI = 1.5,   lwdInner = 2,   outerCI = 3,   lwdOuter = .5,   pointSize = 3.5 )"},{"path":"/articles/arguments.html","id":"color-shape-and-linetype","dir":"Articles","previous_headings":"Coefficients","what":"color, shape, and linetype","title":"Customising `coefplot`","text":"See ggplot2 documentation differentiation learn .","code":"coefplot(   model,   color = 'red',   shape = 23,   outerType = 2 )"},{"path":"/articles/arguments.html","id":"intercept","dir":"Articles","previous_headings":"Coefficients","what":"intercept","title":"Customising `coefplot`","text":"","code":"coefplot(   model,   intercept = FALSE )"},{"path":[]},{"path":"/articles/arguments.html","id":"interactive","dir":"Articles","previous_headings":"Display","what":"interactive","title":"Customising `coefplot`","text":"","code":"coefplot(   model,   interactive = TRUE )"},{"path":"/articles/arguments.html","id":"trans","dir":"Articles","previous_headings":"Display","what":"trans","title":"Customising `coefplot`","text":"","code":"coefplot(   model,   trans = \\(x) { x * .1 } )"},{"path":"/articles/arguments.html","id":"zerocolor-zerolwd-and-zerotype","dir":"Articles","previous_headings":"Display","what":"zeroColor, zeroLWD, and zeroType","title":"Customising `coefplot`","text":"","code":"coefplot(   model,   zeroColor = 'red',   zeroLWD = 2,   zeroType = 'dotdash' )"},{"path":"/articles/arguments.html","id":"facet-and-scales","dir":"Articles","previous_headings":"Display","what":"facet and scales","title":"Customising `coefplot`","text":"","code":"coefplot(   model,   facet = TRUE,   scales = 'free' )"},{"path":"/articles/arguments.html","id":"sort-and-decreasing","dir":"Articles","previous_headings":"Display","what":"sort and decreasing","title":"Customising `coefplot`","text":"","code":"coefplot(   model,   sort = 'alphabetical' ) coefplot(   model,   decreasing = TRUE )"},{"path":"/articles/coefplot.html","id":"coefplot","dir":"Articles","previous_headings":"","what":"coefplot()","title":"Using `coefplot`","text":"coefplot provides S3 Methods lm, glm, workflows, model_fit, rxGlm, rxLinMod, rxLogit objects. methods take arguments default coefplot() method.","code":""},{"path":"/articles/coefplot.html","id":"coefplot-lm","dir":"Articles","previous_headings":"","what":"coefplot.lm()","title":"Using `coefplot`","text":"","code":"lm_model <- lm(mpg ~ wt + cyl*disp, data = mtcars) coefplot(lm_model)"},{"path":"/articles/coefplot.html","id":"coefplot-glm","dir":"Articles","previous_headings":"","what":"coefplot.glm()","title":"Using `coefplot`","text":"","code":"glm_model <-    glm(     mpg > 15 ~ wt + cyl*disp,      data = mtcars,      family = binomial(link = \"logit\")   ) coefplot(glm_model) coefplot(glm_model, trans = invlogit)"},{"path":"/articles/coefplot.html","id":"coefplot-workflow","dir":"Articles","previous_headings":"","what":"coefplot.workflow()","title":"Using `coefplot`","text":"coefplot.workflow() plots coefficients fitted workflows::workflow() object. Bceause example started workflows::workflow() call, workflow class thus uses coefplot.workflow().","code":"workflows::workflow() |>   workflows::add_formula(mpg ~ wt + cyl*disp) |>   workflows::add_model(parsnip::linear_reg()) |>   parsnip::fit(mtcars) |>   coefplot()"},{"path":"/articles/coefplot.html","id":"coefplot-model_fit","dir":"Articles","previous_headings":"","what":"coefplot.model_fit()","title":"Using `coefplot`","text":"coefplot.model_fit() passes directly parsnip::fit() coefplot() like example coefplot.workflow(), example contained entirely within parsnip calls, class model_fit.","code":"parsnip::linear_reg() |>   parsnip::set_engine('lm') |>   parsnip::fit(mpg ~ wt + cyl*disp, data = mtcars) |>   coefplot()"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jared Lander. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lander J (2024). coefplot: Plots Coefficients Fitted Models. R package version 1.2.8.","code":"@Manual{,   title = {coefplot: Plots Coefficients from Fitted Models},   author = {Jared Lander},   year = {2024},   note = {R package version 1.2.8}, }"},{"path":"/index.html","id":"coefplot-","dir":"","previous_headings":"","what":"Plot coefficients using ggplot2","title":"Plot coefficients using ggplot2","text":"Coefplot package plotting coefficients standard errors variety models. Currently stats::lm(), stats::glm(), parsnip workflows fitted models, glmnet::glmnet(), maxLik::maxLik(), RevoScaleR::rxLinMod(), RevoScaleR::rxGLM() revoScaleR::rxLogit() supported. package designed S3 dispatch functions coefplot getModelInfo make easy additions new models. interested helping please contact package author.","code":""},{"path":[]},{"path":"/reference/annotateSeries.html","id":null,"dir":"Reference","previous_headings":"","what":"annotateSeries — annotateSeries","title":"annotateSeries — annotateSeries","text":"Annotate series","code":""},{"path":"/reference/annotateSeries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"annotateSeries — annotateSeries","text":"","code":"annotateSeries(   dygraph,   series,   x = 0,   text = series,   tooltip = series,   width = 50,   ... )"},{"path":"/reference/annotateSeries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"annotateSeries — annotateSeries","text":"dygraph Dygraph add annotation series Series attach annotation . default, last series defined using dySeries. x Either numeric date value indicating place annotation. date value, class POSIXct convertible POSIXct. text Text overlay chart location x tooltip Additional tooltip text display mouse hover width Width (pixels) annotation flag. ... arguments passed link[dygraphs]{dyAnnotation}","code":""},{"path":"/reference/annotateSeries.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"annotateSeries — annotateSeries","text":"helper function changes order options link[dygraphs]{dyAnnotation} easier use reduce.","code":""},{"path":"/reference/annotateSeries.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"annotateSeries — annotateSeries","text":"Jared P. Lander","code":""},{"path":"/reference/buildModelCI.html","id":null,"dir":"Reference","previous_headings":"","what":"buildModelCI — buildModelCI","title":"buildModelCI — buildModelCI","text":"Construct Confidence Interval Values Construct Confidence Interval Values","code":""},{"path":"/reference/buildModelCI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"buildModelCI — buildModelCI","text":"","code":"buildModelCI(model, ...)  # S3 method for default buildModelCI(   model,   outerCI = 2,   innerCI = 1,   intercept = TRUE,   numeric = FALSE,   sort = c(\"natural\", \"magnitude\", \"alphabetical\"),   predictors = NULL,   strict = FALSE,   coefficients = NULL,   newNames = NULL,   trans = identity,   decreasing = TRUE,   name = NULL,   interceptName = \"(Intercept)\",   ... )"},{"path":"/reference/buildModelCI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"buildModelCI — buildModelCI","text":"model Fitted model lm, glm ... See Details information factors, shorten outerCI wide outer confidence interval , normally 2 standard deviations.  0, outer confidence interval. innerCI wide inner confidence interval , normally 1 standard deviation.  0, inner confidence interval. intercept logical; Whether Intercept coefficient plotted numeric logical; true factors exactly one value, displayed horizontal graph continuous confidence bounds.; used now. sort Determines sort order coefficients.  Possible values c(\"natural\", \"magnitude\", \"alphabetical\") predictors character vector specifying variables keep.  individual variable specified, individual levels factors must specified.  working making easier implement, option now. strict TRUE predictors matched coefficients, interactions coefficients character vector specifying factor variables keep.  keep levels interactions, even listed. newNames Named character vector new names coefficients trans transformation function apply values confidence intervals.  identity default.  Use invlogit binary regression. decreasing logical; Whether coefficients ascending descending name name model, NULL call used interceptName Specifies name intercept case default \"(Intercept\").","code":""},{"path":"/reference/buildModelCI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"buildModelCI — buildModelCI","text":"data.frame listing coefficients confidence bands. data.frame listing coefficients confidence bands.","code":""},{"path":"/reference/buildModelCI.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"buildModelCI — buildModelCI","text":"Takes model builds data.frame holding coefficient value confidence interval values. Takes model builds data.frame holding coefficient value confidence interval values.","code":""},{"path":[]},{"path":"/reference/buildModelCI.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"buildModelCI — buildModelCI","text":"Jared P. Lander","code":""},{"path":"/reference/buildModelCI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"buildModelCI — buildModelCI","text":"","code":"data(diamonds) model1 <- lm(price ~ carat + cut, data=diamonds) coefplot:::buildModelCI(model1) #>                   Value Coefficient   HighInner    LowInner  HighOuter #> cut^4          74.59427       cut^4    90.83386    58.35469   107.0734 #> cut.C         367.90995       cut.C   388.12410   347.69579   408.3383 #> cut.Q        -528.59779       cut.Q  -505.46541  -551.73018  -482.3330 #> cut.L        1239.80045       cut.L  1265.90049  1213.70040  1292.0005 #> carat        7871.08213       carat  7885.06176  7857.10251  7899.0414 #> (Intercept) -2701.37602 (Intercept) -2685.94495 -2716.80710 -2670.5139 #>               LowOuter  Model #> cut^4          42.1151 model1 #> cut.C         327.4816 model1 #> cut.Q        -574.8626 model1 #> cut.L        1187.6004 model1 #> carat        7843.1229 model1 #> (Intercept) -2732.2382 model1 coefplot(model1)    data(diamonds, package='ggplot2') model1 <- lm(price ~ carat + cut, data=diamonds) coefplot:::buildModelCI(model1) #>                   Value Coefficient   HighInner    LowInner  HighOuter #> cut^4          74.59427       cut^4    90.83386    58.35469   107.0734 #> cut.C         367.90995       cut.C   388.12410   347.69579   408.3383 #> cut.Q        -528.59779       cut.Q  -505.46541  -551.73018  -482.3330 #> cut.L        1239.80045       cut.L  1265.90049  1213.70040  1292.0005 #> carat        7871.08213       carat  7885.06176  7857.10251  7899.0414 #> (Intercept) -2701.37602 (Intercept) -2685.94495 -2716.80710 -2670.5139 #>               LowOuter  Model #> cut^4          42.1151 model1 #> cut.C         327.4816 model1 #> cut.Q        -574.8626 model1 #> cut.L        1187.6004 model1 #> carat        7843.1229 model1 #> (Intercept) -2732.2382 model1 coefplot(model1)"},{"path":"/reference/buildPlotting.default.html","id":null,"dir":"Reference","previous_headings":"","what":"Coefplot plotting — buildPlotting.default","title":"Coefplot plotting — buildPlotting.default","text":"Build ggplot object coefplot","code":""},{"path":"/reference/buildPlotting.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coefplot plotting — buildPlotting.default","text":"","code":"buildPlotting.default(   modelCI,   title = \"Coefficient Plot\",   xlab = \"Value\",   ylab = \"Coefficient\",   lwdInner = 1 + interactive * 2,   lwdOuter = if (interactive) 1 else unname((Sys.info()[\"sysname\"] != \"Windows\") * 0.5),   pointSize = 3 + interactive * 5,   color = \"blue\",   cex = 0.8,   textAngle = 0,   numberAngle = 0,   shape = 16,   innerType = 1,   outerType = 1,   outerCI = 2,   innerCI = 1,   multi = FALSE,   zeroColor = \"grey\",   zeroLWD = 1,   zeroType = 2,   numeric = FALSE,   fillColor = \"grey\",   alpha = 1/2,   horizontal = FALSE,   facet = FALSE,   scales = \"free\",   value = \"Value\",   coefficient = \"Coefficient\",   errorHeight = 0,   dodgeHeight = 1,   interactive = FALSE,   linetype = 1 )"},{"path":"/reference/buildPlotting.default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coefplot plotting — buildPlotting.default","text":"modelCI object created buildModelCI title name plot, NULL name given xlab x label ylab y label lwdInner thickness inner confidence interval lwdOuter thickness outer confidence interval pointSize Size coefficient point color color points lines cex text size multiplier, currently used textAngle angle coefficient labels, 0 horizontal numberAngle angle value labels, 0 horizontal shape shape points outerCI wide outer confidence interval , normally 2 standard deviations.  0, outer confidence interval. innerCI wide inner confidence interval , normally 1 standard deviation.  0, inner confidence interval. multi logical; multiplot leave colors determined legend, FALSE make colors zeroColor color line indicating 0 zeroLWD thickness 0 line zeroType type 0 line, 0 mean line numeric logical; true factors exactly one value, displayed horizontal graph continuous confidence bounds. fillColor color confidence bounds numeric factor alpha transparency level numeric factor's confidence bound horizontal logical; plot displayed horizontally facet logical; coefficients faceted variables, numeric coefficients (including intercept) one facet scales way axes treated faceted plot.  Can c(\"fixed\", \"free\", \"free_x\", \"free_y\") value Name variable value metric coefficient Name variable coefficient names errorHeight Height error bars dodgeHeight Amount vertical dodging interactive TRUE interactive plot generated instead [ggplot2] linetype linetype error bars","code":""},{"path":"/reference/buildPlotting.default.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coefplot plotting — buildPlotting.default","text":"ggplot graph object","code":""},{"path":"/reference/buildPlotting.default.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Coefplot plotting — buildPlotting.default","text":"function builds ggplot layer layer coefplot.lm","code":""},{"path":[]},{"path":"/reference/buildPlotting.default.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Coefplot plotting — buildPlotting.default","text":"Jared P. Lander www.jaredlander.com","code":""},{"path":"/reference/buildPlotting.default.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coefplot plotting — buildPlotting.default","text":"","code":"data(diamonds) model1 <- lm(price ~ carat + cut, data=diamonds) theCI <- coefplot:::buildModelCI(model1) coefplot:::buildPlotting.default(theCI)  coefplot(model1)"},{"path":"/reference/buildPlottingPloty.default.html","id":null,"dir":"Reference","previous_headings":"","what":"buildPlottingPloty.default — buildPlottingPloty.default","title":"buildPlottingPloty.default — buildPlottingPloty.default","text":"Builds plotting structure interactive coefplots","code":""},{"path":"/reference/buildPlottingPloty.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"buildPlottingPloty.default — buildPlottingPloty.default","text":"","code":"buildPlottingPloty.default(   modelCI,   title = \"Coefficient Plot\",   xlab = \"Value\",   ylab = \"Coefficient\",   lwdInner = 3,   lwdOuter = 1,   color = \"blue\",   shape = \"circle\",   pointSize = 8 )"},{"path":"/reference/buildPlottingPloty.default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"buildPlottingPloty.default — buildPlottingPloty.default","text":"modelCI object created buildModelCI title name plot, NULL name given xlab x label ylab y label lwdInner thickness inner confidence interval lwdOuter thickness outer confidence interval color color points lines shape shape points pointSize Size coefficient point","code":""},{"path":"/reference/buildPlottingPloty.default.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"buildPlottingPloty.default — buildPlottingPloty.default","text":"ggplot graph object","code":""},{"path":"/reference/buildPlottingPloty.default.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"buildPlottingPloty.default — buildPlottingPloty.default","text":"Uses plotly make interactive version coefplot. Still uses modelCI.","code":""},{"path":[]},{"path":"/reference/buildPlottingPloty.default.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"buildPlottingPloty.default — buildPlottingPloty.default","text":"Jared P. Lander","code":""},{"path":"/reference/buildPlottingPloty.default.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"buildPlottingPloty.default — buildPlottingPloty.default","text":"","code":"data(diamonds) mod1 <- lm(price ~ carat + cut, data=diamonds) theCI1 <- coefplot:::buildModelCI(mod1) coefplot:::buildPlottingPloty.default(theCI1)  {\"x\":{\"visdat\":{\"5a1823bf319d\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"5a1823bf319d\",\"attrs\":{\"5a1823bf319d\":{\"y\":{},\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"x\":{},\"xend\":{},\"yend\":{},\"type\":\"scatter\",\"mode\":\"lines\",\"text\":{},\"line\":{\"color\":\"blue\",\"width\":1},\"showlegend\":false,\"legendgroup\":{},\"hoverinfo\":\"text\",\"inherit\":true},\"5a1823bf319d.1\":{\"y\":{},\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"x\":{},\"xend\":{},\"yend\":{},\"type\":\"scatter\",\"mode\":\"lines\",\"text\":{},\"line\":{\"color\":\"blue\",\"width\":3},\"showlegend\":false,\"legendgroup\":{},\"hoverinfo\":\"text\",\"inherit\":true},\"5a1823bf319d.2\":{\"y\":{},\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"x\":{},\"type\":\"scatter\",\"mode\":\"markers\",\"text\":{},\"marker\":{\"symbol\":\"circle\",\"size\":8,\"color\":\"blue\"},\"showlegend\":true,\"legendgroup\":{},\"hoverinfo\":\"text+x\",\"inherit\":true}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"title\":\"Coefficient Plot\",\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"Value\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"Coefficient\",\"type\":\"category\",\"categoryorder\":\"array\",\"categoryarray\":[\"cut^4\",\"cut.C\",\"cut.Q\",\"cut.L\",\"carat\",\"(Intercept)\"]},\"hovermode\":\"closest\",\"showlegend\":false},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"y\":[\"cut^4\",\"cut^4\",null,\"cut.C\",\"cut.C\",null,\"cut.Q\",\"cut.Q\",null,\"cut.L\",\"cut.L\",null,\"carat\",\"carat\",null,\"(Intercept)\",\"(Intercept)\"],\"x\":[42.115103401709902,107.07344176893541,null,327.48163573538591,408.33825885929764,null,-574.86256902627451,-482.3330196423363,null,1187.6003580604161,1292.0005364915082,null,7843.1228803760841,7899.0413874788319,null,-2732.2381760302383,-2670.5138687314534],\"type\":\"scatter\",\"mode\":\"lines\",\"text\":[\"cut^4\",\"cut^4\",null,\"cut.C\",\"cut.C\",null,\"cut.Q\",\"cut.Q\",null,\"cut.L\",\"cut.L\",null,\"carat\",\"carat\",null,\"(Intercept)\",\"(Intercept)\"],\"line\":{\"color\":\"blue\",\"width\":1},\"showlegend\":false,\"legendgroup\":\"mod1\",\"hoverinfo\":[\"text\",\"text\",null,\"text\",\"text\",null,\"text\",\"text\",null,\"text\",\"text\",null,\"text\",\"text\",null,\"text\",\"text\"],\"marker\":{\"color\":\"rgba(31,119,180,1)\",\"line\":{\"color\":\"rgba(31,119,180,1)\"}},\"error_y\":{\"color\":\"rgba(31,119,180,1)\"},\"error_x\":{\"color\":\"rgba(31,119,180,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"y\":[\"cut^4\",\"cut^4\",null,\"cut.C\",\"cut.C\",null,\"cut.Q\",\"cut.Q\",null,\"cut.L\",\"cut.L\",null,\"carat\",\"carat\",null,\"(Intercept)\",\"(Intercept)\"],\"x\":[58.354687993516279,90.833857177129033,null,347.69579151636384,388.12410307831971,null,-551.73018168028989,-505.46540698832081,null,1213.7004026681891,1265.9004918837352,null,7857.1025071517706,7885.0617607031454,null,-2716.8070992055423,-2685.9449455561494],\"type\":\"scatter\",\"mode\":\"lines\",\"text\":[\"cut^4\",\"cut^4\",null,\"cut.C\",\"cut.C\",null,\"cut.Q\",\"cut.Q\",null,\"cut.L\",\"cut.L\",null,\"carat\",\"carat\",null,\"(Intercept)\",\"(Intercept)\"],\"line\":{\"color\":\"blue\",\"width\":3},\"showlegend\":false,\"legendgroup\":\"mod1\",\"hoverinfo\":[\"text\",\"text\",null,\"text\",\"text\",null,\"text\",\"text\",null,\"text\",\"text\",null,\"text\",\"text\",null,\"text\",\"text\"],\"marker\":{\"color\":\"rgba(255,127,14,1)\",\"line\":{\"color\":\"rgba(255,127,14,1)\"}},\"error_y\":{\"color\":\"rgba(255,127,14,1)\"},\"error_x\":{\"color\":\"rgba(255,127,14,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"y\":[\"cut^4\",\"cut.C\",\"cut.Q\",\"cut.L\",\"carat\",\"(Intercept)\"],\"x\":[74.594272585322656,367.90994729734177,-528.59779433430538,1239.8004472759621,7871.082133927458,-2701.3760223808458],\"type\":\"scatter\",\"mode\":\"markers\",\"text\":[\"cut^4\",\"cut.C\",\"cut.Q\",\"cut.L\",\"carat\",\"(Intercept)\"],\"marker\":{\"color\":\"blue\",\"symbol\":\"circle\",\"size\":8,\"line\":{\"color\":\"rgba(44,160,44,1)\"}},\"showlegend\":true,\"legendgroup\":\"mod1\",\"hoverinfo\":[\"text+x\",\"text+x\",\"text+x\",\"text+x\",\"text+x\",\"text+x\"],\"error_y\":{\"color\":\"rgba(44,160,44,1)\"},\"error_x\":{\"color\":\"rgba(44,160,44,1)\"},\"line\":{\"color\":\"rgba(44,160,44,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}coefplot(mod1, interactive=TRUE)  {\"x\":{\"visdat\":{\"5a185d524cc0\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"5a185d524cc0\",\"attrs\":{\"5a185d524cc0\":{\"y\":{},\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"x\":{},\"xend\":{},\"yend\":{},\"type\":\"scatter\",\"mode\":\"lines\",\"text\":{},\"line\":{\"color\":\"blue\",\"width\":1},\"showlegend\":false,\"legendgroup\":{},\"hoverinfo\":\"text\",\"inherit\":true},\"5a185d524cc0.1\":{\"y\":{},\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"x\":{},\"xend\":{},\"yend\":{},\"type\":\"scatter\",\"mode\":\"lines\",\"text\":{},\"line\":{\"color\":\"blue\",\"width\":3},\"showlegend\":false,\"legendgroup\":{},\"hoverinfo\":\"text\",\"inherit\":true},\"5a185d524cc0.2\":{\"y\":{},\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"x\":{},\"type\":\"scatter\",\"mode\":\"markers\",\"text\":{},\"marker\":{\"symbol\":16,\"size\":8,\"color\":\"blue\"},\"showlegend\":true,\"legendgroup\":{},\"hoverinfo\":\"text+x\",\"inherit\":true}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"title\":\"Coefficient Plot\",\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"Value\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"Coefficient\",\"type\":\"category\",\"categoryorder\":\"array\",\"categoryarray\":[\"(Intercept)\",\"carat\",\"cut.L\",\"cut.Q\",\"cut.C\",\"cut^4\"]},\"hovermode\":\"closest\",\"showlegend\":false},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"y\":[\"(Intercept)\",\"(Intercept)\",null,\"carat\",\"carat\",null,\"cut.L\",\"cut.L\",null,\"cut.Q\",\"cut.Q\",null,\"cut.C\",\"cut.C\",null,\"cut^4\",\"cut^4\"],\"x\":[-2732.2381760302383,-2670.5138687314534,null,7843.1228803760841,7899.0413874788319,null,1187.6003580604161,1292.0005364915082,null,-574.86256902627451,-482.3330196423363,null,327.48163573538591,408.33825885929764,null,42.115103401709902,107.07344176893541],\"type\":\"scatter\",\"mode\":\"lines\",\"text\":[\"(Intercept)\",\"(Intercept)\",null,\"carat\",\"carat\",null,\"cut.L\",\"cut.L\",null,\"cut.Q\",\"cut.Q\",null,\"cut.C\",\"cut.C\",null,\"cut^4\",\"cut^4\"],\"line\":{\"color\":\"blue\",\"width\":1},\"showlegend\":false,\"legendgroup\":\"model\",\"hoverinfo\":[\"text\",\"text\",null,\"text\",\"text\",null,\"text\",\"text\",null,\"text\",\"text\",null,\"text\",\"text\",null,\"text\",\"text\"],\"marker\":{\"color\":\"rgba(31,119,180,1)\",\"line\":{\"color\":\"rgba(31,119,180,1)\"}},\"error_y\":{\"color\":\"rgba(31,119,180,1)\"},\"error_x\":{\"color\":\"rgba(31,119,180,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"y\":[\"(Intercept)\",\"(Intercept)\",null,\"carat\",\"carat\",null,\"cut.L\",\"cut.L\",null,\"cut.Q\",\"cut.Q\",null,\"cut.C\",\"cut.C\",null,\"cut^4\",\"cut^4\"],\"x\":[-2716.8070992055423,-2685.9449455561494,null,7857.1025071517706,7885.0617607031454,null,1213.7004026681891,1265.9004918837352,null,-551.73018168028989,-505.46540698832081,null,347.69579151636384,388.12410307831971,null,58.354687993516279,90.833857177129033],\"type\":\"scatter\",\"mode\":\"lines\",\"text\":[\"(Intercept)\",\"(Intercept)\",null,\"carat\",\"carat\",null,\"cut.L\",\"cut.L\",null,\"cut.Q\",\"cut.Q\",null,\"cut.C\",\"cut.C\",null,\"cut^4\",\"cut^4\"],\"line\":{\"color\":\"blue\",\"width\":3},\"showlegend\":false,\"legendgroup\":\"model\",\"hoverinfo\":[\"text\",\"text\",null,\"text\",\"text\",null,\"text\",\"text\",null,\"text\",\"text\",null,\"text\",\"text\",null,\"text\",\"text\"],\"marker\":{\"color\":\"rgba(255,127,14,1)\",\"line\":{\"color\":\"rgba(255,127,14,1)\"}},\"error_y\":{\"color\":\"rgba(255,127,14,1)\"},\"error_x\":{\"color\":\"rgba(255,127,14,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"y\":[\"(Intercept)\",\"carat\",\"cut.L\",\"cut.Q\",\"cut.C\",\"cut^4\"],\"x\":[-2701.3760223808458,7871.082133927458,1239.8004472759621,-528.59779433430538,367.90994729734177,74.594272585322656],\"type\":\"scatter\",\"mode\":\"markers\",\"text\":[\"(Intercept)\",\"carat\",\"cut.L\",\"cut.Q\",\"cut.C\",\"cut^4\"],\"marker\":{\"color\":\"blue\",\"symbol\":16,\"size\":8,\"line\":{\"color\":\"rgba(44,160,44,1)\"}},\"showlegend\":true,\"legendgroup\":\"model\",\"hoverinfo\":[\"text+x\",\"text+x\",\"text+x\",\"text+x\",\"text+x\",\"text+x\"],\"error_y\":{\"color\":\"rgba(44,160,44,1)\"},\"error_x\":{\"color\":\"rgba(44,160,44,1)\"},\"line\":{\"color\":\"rgba(44,160,44,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}mod2 <- lm(mpg ~ cyl + qsec - 1, data=mtcars) mod3 <- lm(mpg ~ cyl + qsec + disp - 1, data=mtcars) theCI2 <- coefplot:::buildModelCI(mod2) theCI3 <- coefplot:::buildModelCI(mod3) coefplot::buildPlottingPloty.default(theCI2)  {\"x\":{\"visdat\":{\"5a18462d011d\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"5a18462d011d\",\"attrs\":{\"5a18462d011d\":{\"y\":{},\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"x\":{},\"xend\":{},\"yend\":{},\"type\":\"scatter\",\"mode\":\"lines\",\"text\":{},\"line\":{\"color\":\"blue\",\"width\":1},\"showlegend\":false,\"legendgroup\":{},\"hoverinfo\":\"text\",\"inherit\":true},\"5a18462d011d.1\":{\"y\":{},\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"x\":{},\"xend\":{},\"yend\":{},\"type\":\"scatter\",\"mode\":\"lines\",\"text\":{},\"line\":{\"color\":\"blue\",\"width\":3},\"showlegend\":false,\"legendgroup\":{},\"hoverinfo\":\"text\",\"inherit\":true},\"5a18462d011d.2\":{\"y\":{},\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"x\":{},\"type\":\"scatter\",\"mode\":\"markers\",\"text\":{},\"marker\":{\"symbol\":\"circle\",\"size\":8,\"color\":\"blue\"},\"showlegend\":true,\"legendgroup\":{},\"hoverinfo\":\"text+x\",\"inherit\":true}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"title\":\"Coefficient Plot\",\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"Value\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"Coefficient\",\"type\":\"category\",\"categoryorder\":\"array\",\"categoryarray\":[\"qsec\",\"cyl\"]},\"hovermode\":\"closest\",\"showlegend\":false},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"y\":[\"qsec\",\"qsec\",null,\"cyl\",\"cyl\"],\"x\":[1.3805703113404286,1.8996248937026743,null,-2.2392384240276053,-0.79196644518659665],\"type\":\"scatter\",\"mode\":\"lines\",\"text\":[\"qsec\",\"qsec\",null,\"cyl\",\"cyl\"],\"line\":{\"color\":\"blue\",\"width\":1},\"showlegend\":false,\"legendgroup\":\"mod2\",\"hoverinfo\":[\"text\",\"text\",null,\"text\",\"text\"],\"marker\":{\"color\":\"rgba(31,119,180,1)\",\"line\":{\"color\":\"rgba(31,119,180,1)\"}},\"error_y\":{\"color\":\"rgba(31,119,180,1)\"},\"error_x\":{\"color\":\"rgba(31,119,180,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"y\":[\"qsec\",\"qsec\",null,\"cyl\",\"cyl\"],\"x\":[1.5103339569309902,1.7698612481121128,null,-1.8774204293173533,-1.1537844398968489],\"type\":\"scatter\",\"mode\":\"lines\",\"text\":[\"qsec\",\"qsec\",null,\"cyl\",\"cyl\"],\"line\":{\"color\":\"blue\",\"width\":3},\"showlegend\":false,\"legendgroup\":\"mod2\",\"hoverinfo\":[\"text\",\"text\",null,\"text\",\"text\"],\"marker\":{\"color\":\"rgba(255,127,14,1)\",\"line\":{\"color\":\"rgba(255,127,14,1)\"}},\"error_y\":{\"color\":\"rgba(255,127,14,1)\"},\"error_x\":{\"color\":\"rgba(255,127,14,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"y\":[\"qsec\",\"cyl\"],\"x\":[1.6400976025215515,-1.5156024346071011],\"type\":\"scatter\",\"mode\":\"markers\",\"text\":[\"qsec\",\"cyl\"],\"marker\":{\"color\":\"blue\",\"symbol\":\"circle\",\"size\":8,\"line\":{\"color\":\"rgba(44,160,44,1)\"}},\"showlegend\":true,\"legendgroup\":\"mod2\",\"hoverinfo\":[\"text+x\",\"text+x\"],\"error_y\":{\"color\":\"rgba(44,160,44,1)\"},\"error_x\":{\"color\":\"rgba(44,160,44,1)\"},\"line\":{\"color\":\"rgba(44,160,44,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}coefplot::buildPlottingPloty.default(theCI3)  {\"x\":{\"visdat\":{\"5a1834a43ae9\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"5a1834a43ae9\",\"attrs\":{\"5a1834a43ae9\":{\"y\":{},\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"x\":{},\"xend\":{},\"yend\":{},\"type\":\"scatter\",\"mode\":\"lines\",\"text\":{},\"line\":{\"color\":\"blue\",\"width\":1},\"showlegend\":false,\"legendgroup\":{},\"hoverinfo\":\"text\",\"inherit\":true},\"5a1834a43ae9.1\":{\"y\":{},\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"x\":{},\"xend\":{},\"yend\":{},\"type\":\"scatter\",\"mode\":\"lines\",\"text\":{},\"line\":{\"color\":\"blue\",\"width\":3},\"showlegend\":false,\"legendgroup\":{},\"hoverinfo\":\"text\",\"inherit\":true},\"5a1834a43ae9.2\":{\"y\":{},\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"x\":{},\"type\":\"scatter\",\"mode\":\"markers\",\"text\":{},\"marker\":{\"symbol\":\"circle\",\"size\":8,\"color\":\"blue\"},\"showlegend\":true,\"legendgroup\":{},\"hoverinfo\":\"text+x\",\"inherit\":true}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"title\":\"Coefficient Plot\",\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"Value\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"Coefficient\",\"type\":\"category\",\"categoryorder\":\"array\",\"categoryarray\":[\"disp\",\"qsec\",\"cyl\"]},\"hovermode\":\"closest\",\"showlegend\":false},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"y\":[\"disp\",\"disp\",null,\"qsec\",\"qsec\",null,\"cyl\",\"cyl\"],\"x\":[-0.063339585253227138,-0.014388330926523859,null,1.1207513022390927,1.6700877350525749,null,-0.85428744009558777,2.1529317261930863],\"type\":\"scatter\",\"mode\":\"lines\",\"text\":[\"disp\",\"disp\",null,\"qsec\",\"qsec\",null,\"cyl\",\"cyl\"],\"line\":{\"color\":\"blue\",\"width\":1},\"showlegend\":false,\"legendgroup\":\"mod3\",\"hoverinfo\":[\"text\",\"text\",null,\"text\",\"text\",null,\"text\",\"text\"],\"marker\":{\"color\":\"rgba(31,119,180,1)\",\"line\":{\"color\":\"rgba(31,119,180,1)\"}},\"error_y\":{\"color\":\"rgba(31,119,180,1)\"},\"error_x\":{\"color\":\"rgba(31,119,180,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"y\":[\"disp\",\"disp\",null,\"qsec\",\"qsec\",null,\"cyl\",\"cyl\"],\"x\":[-0.051101771671551319,-0.026626144508199681,null,1.2580854104424632,1.5327536268492044,null,-0.10248264852341926,1.4011269346209176],\"type\":\"scatter\",\"mode\":\"lines\",\"text\":[\"disp\",\"disp\",null,\"qsec\",\"qsec\",null,\"cyl\",\"cyl\"],\"line\":{\"color\":\"blue\",\"width\":3},\"showlegend\":false,\"legendgroup\":\"mod3\",\"hoverinfo\":[\"text\",\"text\",null,\"text\",\"text\",null,\"text\",\"text\"],\"marker\":{\"color\":\"rgba(255,127,14,1)\",\"line\":{\"color\":\"rgba(255,127,14,1)\"}},\"error_y\":{\"color\":\"rgba(255,127,14,1)\"},\"error_x\":{\"color\":\"rgba(255,127,14,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"y\":[\"disp\",\"qsec\",\"cyl\"],\"x\":[-0.0388639580898755,1.3954195186458338,0.64932214304874925],\"type\":\"scatter\",\"mode\":\"markers\",\"text\":[\"disp\",\"qsec\",\"cyl\"],\"marker\":{\"color\":\"blue\",\"symbol\":\"circle\",\"size\":8,\"line\":{\"color\":\"rgba(44,160,44,1)\"}},\"showlegend\":true,\"legendgroup\":\"mod3\",\"hoverinfo\":[\"text+x\",\"text+x\",\"text+x\"],\"error_y\":{\"color\":\"rgba(44,160,44,1)\"},\"error_x\":{\"color\":\"rgba(44,160,44,1)\"},\"line\":{\"color\":\"rgba(44,160,44,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}coefplot(mod2, interactive=TRUE)  {\"x\":{\"visdat\":{\"5a18a17b1ff\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"5a18a17b1ff\",\"attrs\":{\"5a18a17b1ff\":{\"y\":{},\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"x\":{},\"xend\":{},\"yend\":{},\"type\":\"scatter\",\"mode\":\"lines\",\"text\":{},\"line\":{\"color\":\"blue\",\"width\":1},\"showlegend\":false,\"legendgroup\":{},\"hoverinfo\":\"text\",\"inherit\":true},\"5a18a17b1ff.1\":{\"y\":{},\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"x\":{},\"xend\":{},\"yend\":{},\"type\":\"scatter\",\"mode\":\"lines\",\"text\":{},\"line\":{\"color\":\"blue\",\"width\":3},\"showlegend\":false,\"legendgroup\":{},\"hoverinfo\":\"text\",\"inherit\":true},\"5a18a17b1ff.2\":{\"y\":{},\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"x\":{},\"type\":\"scatter\",\"mode\":\"markers\",\"text\":{},\"marker\":{\"symbol\":16,\"size\":8,\"color\":\"blue\"},\"showlegend\":true,\"legendgroup\":{},\"hoverinfo\":\"text+x\",\"inherit\":true}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"title\":\"Coefficient Plot\",\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"Value\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"Coefficient\",\"type\":\"category\",\"categoryorder\":\"array\",\"categoryarray\":[\"cyl\",\"qsec\"]},\"hovermode\":\"closest\",\"showlegend\":false},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"y\":[\"cyl\",\"cyl\",null,\"qsec\",\"qsec\"],\"x\":[-2.2392384240276053,-0.79196644518659665,null,1.3805703113404286,1.8996248937026743],\"type\":\"scatter\",\"mode\":\"lines\",\"text\":[\"cyl\",\"cyl\",null,\"qsec\",\"qsec\"],\"line\":{\"color\":\"blue\",\"width\":1},\"showlegend\":false,\"legendgroup\":\"model\",\"hoverinfo\":[\"text\",\"text\",null,\"text\",\"text\"],\"marker\":{\"color\":\"rgba(31,119,180,1)\",\"line\":{\"color\":\"rgba(31,119,180,1)\"}},\"error_y\":{\"color\":\"rgba(31,119,180,1)\"},\"error_x\":{\"color\":\"rgba(31,119,180,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"y\":[\"cyl\",\"cyl\",null,\"qsec\",\"qsec\"],\"x\":[-1.8774204293173533,-1.1537844398968489,null,1.5103339569309902,1.7698612481121128],\"type\":\"scatter\",\"mode\":\"lines\",\"text\":[\"cyl\",\"cyl\",null,\"qsec\",\"qsec\"],\"line\":{\"color\":\"blue\",\"width\":3},\"showlegend\":false,\"legendgroup\":\"model\",\"hoverinfo\":[\"text\",\"text\",null,\"text\",\"text\"],\"marker\":{\"color\":\"rgba(255,127,14,1)\",\"line\":{\"color\":\"rgba(255,127,14,1)\"}},\"error_y\":{\"color\":\"rgba(255,127,14,1)\"},\"error_x\":{\"color\":\"rgba(255,127,14,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"y\":[\"cyl\",\"qsec\"],\"x\":[-1.5156024346071011,1.6400976025215515],\"type\":\"scatter\",\"mode\":\"markers\",\"text\":[\"cyl\",\"qsec\"],\"marker\":{\"color\":\"blue\",\"symbol\":16,\"size\":8,\"line\":{\"color\":\"rgba(44,160,44,1)\"}},\"showlegend\":true,\"legendgroup\":\"model\",\"hoverinfo\":[\"text+x\",\"text+x\"],\"error_y\":{\"color\":\"rgba(44,160,44,1)\"},\"error_x\":{\"color\":\"rgba(44,160,44,1)\"},\"line\":{\"color\":\"rgba(44,160,44,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}coefplot(mod3, interactive=TRUE)  {\"x\":{\"visdat\":{\"5a1819a6e186\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"5a1819a6e186\",\"attrs\":{\"5a1819a6e186\":{\"y\":{},\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"x\":{},\"xend\":{},\"yend\":{},\"type\":\"scatter\",\"mode\":\"lines\",\"text\":{},\"line\":{\"color\":\"blue\",\"width\":1},\"showlegend\":false,\"legendgroup\":{},\"hoverinfo\":\"text\",\"inherit\":true},\"5a1819a6e186.1\":{\"y\":{},\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"x\":{},\"xend\":{},\"yend\":{},\"type\":\"scatter\",\"mode\":\"lines\",\"text\":{},\"line\":{\"color\":\"blue\",\"width\":3},\"showlegend\":false,\"legendgroup\":{},\"hoverinfo\":\"text\",\"inherit\":true},\"5a1819a6e186.2\":{\"y\":{},\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"x\":{},\"type\":\"scatter\",\"mode\":\"markers\",\"text\":{},\"marker\":{\"symbol\":16,\"size\":8,\"color\":\"blue\"},\"showlegend\":true,\"legendgroup\":{},\"hoverinfo\":\"text+x\",\"inherit\":true}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"title\":\"Coefficient Plot\",\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"Value\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"Coefficient\",\"type\":\"category\",\"categoryorder\":\"array\",\"categoryarray\":[\"cyl\",\"qsec\",\"disp\"]},\"hovermode\":\"closest\",\"showlegend\":false},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"y\":[\"cyl\",\"cyl\",null,\"qsec\",\"qsec\",null,\"disp\",\"disp\"],\"x\":[-0.85428744009558777,2.1529317261930863,null,1.1207513022390927,1.6700877350525749,null,-0.063339585253227138,-0.014388330926523859],\"type\":\"scatter\",\"mode\":\"lines\",\"text\":[\"cyl\",\"cyl\",null,\"qsec\",\"qsec\",null,\"disp\",\"disp\"],\"line\":{\"color\":\"blue\",\"width\":1},\"showlegend\":false,\"legendgroup\":\"model\",\"hoverinfo\":[\"text\",\"text\",null,\"text\",\"text\",null,\"text\",\"text\"],\"marker\":{\"color\":\"rgba(31,119,180,1)\",\"line\":{\"color\":\"rgba(31,119,180,1)\"}},\"error_y\":{\"color\":\"rgba(31,119,180,1)\"},\"error_x\":{\"color\":\"rgba(31,119,180,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"y\":[\"cyl\",\"cyl\",null,\"qsec\",\"qsec\",null,\"disp\",\"disp\"],\"x\":[-0.10248264852341926,1.4011269346209176,null,1.2580854104424632,1.5327536268492044,null,-0.051101771671551319,-0.026626144508199681],\"type\":\"scatter\",\"mode\":\"lines\",\"text\":[\"cyl\",\"cyl\",null,\"qsec\",\"qsec\",null,\"disp\",\"disp\"],\"line\":{\"color\":\"blue\",\"width\":3},\"showlegend\":false,\"legendgroup\":\"model\",\"hoverinfo\":[\"text\",\"text\",null,\"text\",\"text\",null,\"text\",\"text\"],\"marker\":{\"color\":\"rgba(255,127,14,1)\",\"line\":{\"color\":\"rgba(255,127,14,1)\"}},\"error_y\":{\"color\":\"rgba(255,127,14,1)\"},\"error_x\":{\"color\":\"rgba(255,127,14,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"y\":[\"cyl\",\"qsec\",\"disp\"],\"x\":[0.64932214304874925,1.3954195186458338,-0.0388639580898755],\"type\":\"scatter\",\"mode\":\"markers\",\"text\":[\"cyl\",\"qsec\",\"disp\"],\"marker\":{\"color\":\"blue\",\"symbol\":16,\"size\":8,\"line\":{\"color\":\"rgba(44,160,44,1)\"}},\"showlegend\":true,\"legendgroup\":\"model\",\"hoverinfo\":[\"text+x\",\"text+x\",\"text+x\"],\"error_y\":{\"color\":\"rgba(44,160,44,1)\"},\"error_x\":{\"color\":\"rgba(44,160,44,1)\"},\"line\":{\"color\":\"rgba(44,160,44,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]} mod4 <- glmnet::glmnet( x=as.matrix(diamonds[, c('carat', 'x', 'y', 'z')]), y=diamonds$price ) coefplot(mod4, interactive=TRUE, lambda=0.65)  {\"x\":{\"visdat\":{\"5a181b203192\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"5a181b203192\",\"attrs\":{\"5a181b203192\":{\"y\":{},\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"x\":{},\"type\":\"scatter\",\"mode\":\"markers\",\"text\":{},\"marker\":{\"symbol\":16,\"size\":8,\"color\":\"blue\"},\"showlegend\":true,\"legendgroup\":{},\"hoverinfo\":\"text+x\",\"inherit\":true}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"title\":\"Coefficient Plot\",\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"Value\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"Coefficient\",\"type\":\"category\",\"categoryorder\":\"array\",\"categoryarray\":[\"(Intercept)\",\"carat\",\"x\",\"y\",\"z\"]},\"hovermode\":\"closest\",\"showlegend\":false},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"y\":[\"(Intercept)\",\"carat\",\"x\",\"y\",\"z\"],\"x\":[1571.9534060409183,10017.750905530576,-725.02579322418262,91.451221568148014,-565.71306051433248],\"type\":\"scatter\",\"mode\":\"markers\",\"text\":[\"(Intercept)\",\"carat\",\"x\",\"y\",\"z\"],\"marker\":{\"color\":\"blue\",\"symbol\":16,\"size\":8,\"line\":{\"color\":\"rgba(31,119,180,1)\"}},\"showlegend\":true,\"legendgroup\":\"model\",\"hoverinfo\":[\"text+x\",\"text+x\",\"text+x\",\"text+x\",\"text+x\"],\"error_y\":{\"color\":\"rgba(31,119,180,1)\"},\"error_x\":{\"color\":\"rgba(31,119,180,1)\"},\"line\":{\"color\":\"rgba(31,119,180,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}"},{"path":"/reference/coefpath.html","id":null,"dir":"Reference","previous_headings":"","what":"coefpath — coefpath","title":"coefpath — coefpath","text":"Visualize coefficient path resulting elastic net","code":""},{"path":"/reference/coefpath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"coefpath — coefpath","text":"","code":"coefpath(model, ...)  # S3 method for glmnet coefpath(   model,   xlab = \"Log Lambda\",   ylab = \"Coefficients\",   showLegend = c(\"onmouseover\", \"auto\", \"always\", \"follow\", \"never\"),   annotate = TRUE,   elementID = NULL,   ... )  # S3 method for cv.glmnet coefpath(   model,   xlab = \"Log Lambda\",   ylab = \"Coefficients\",   showLegend = c(\"onmouseover\", \"auto\", \"always\", \"follow\", \"never\"),   annotate = TRUE,   colorMin = \"black\",   strokePatternMin = \"dotted\",   labelMin = \"lambda.min\",   locMin = c(\"bottom\", \"top\"),   color1se = \"black\",   strokePattern1se = \"dotted\",   label1se = \"lambda.1se\",   loc1se = c(\"bottom\", \"top\"),   ... )"},{"path":"/reference/coefpath.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"coefpath — coefpath","text":"model glmnet model ... Arguments passed extractPath xlab x-axis label ylab y-axis label showLegend display legend. Specify \"always\" always show legend. Specify \"onmouseover\" display user mouses chart. Specify \"follow\" legend show overlay chart follows mouse. default behavior \"auto\", results \"always\" one series plotted \"onmouseover\" single series plotted. annotate TRUE (default) plot name series elementID Unique identified dygraph, NULL randomly generated colorMin Color line showing lambda.min strokePatternMin Stroke pattern line showing lambda.min labelMin Label line showing lambda.min locMin Location line showing lambda.min, can 'bottom' 'top' color1se Color line showing lambda.1se strokePattern1se Stroke pattern line showing lambda.1se label1se Label line showing lambda.1se loc1se Location line showing lambda.1se, can 'bottom' 'top'","code":""},{"path":"/reference/coefpath.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"coefpath — coefpath","text":"dygraphs object","code":""},{"path":"/reference/coefpath.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"coefpath — coefpath","text":"replacement plot visualizing coefficient path resulting elastic net. allows interactively inspecting plot easier disambiguate coefficients.","code":""},{"path":"/reference/coefpath.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"coefpath — coefpath","text":"Jared P. Lander","code":""},{"path":"/reference/coefpath.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"coefpath — coefpath","text":"","code":"if(requireNamespace('glmnet', quietly=TRUE)){ library(glmnet) library(ggplot2) library(useful) data(diamonds) diaX <- useful::build.x(price ~ carat + cut + x - 1, data=diamonds, contrasts = TRUE) diaY <- useful::build.y(price ~ carat + cut + x - 1, data=diamonds) modG1 <- glmnet(x=diaX, y=diaY) coefpath(modG1)  modG2 <- cv.glmnet(x=diaX, y=diaY, nfolds=5) coefpath(modG2)  x <- matrix(rnorm(100*20),100,20) y <- rnorm(100) fit1 <- glmnet(x, y) coefpath(fit1) }  {\"x\":{\"attrs\":{\"axes\":{\"x\":{\"pixelsPerLabel\":60},\"y\":[]},\"labels\":[\"lambda\",\"V1\",\"V2\",\"V3\",\"V4\",\"V5\",\"V6\",\"V7\",\"V8\",\"V9\",\"V10\",\"V11\",\"V12\",\"V13\",\"V14\",\"V15\",\"V16\",\"V17\",\"V18\",\"V19\",\"V20\"],\"retainDateWindow\":false,\"xlabel\":\"Log Lambda\",\"ylabel\":\"Coefficients\",\"legend\":\"onmouseover\",\"labelsDivWidth\":250,\"labelsShowZeroValues\":true,\"labelsSeparateLines\":false,\"showRangeSelector\":true,\"rangeSelectorHeight\":40,\"rangeSelectorPlotFillColor\":\" #A7B1C4\",\"rangeSelectorPlotStrokeColor\":\"#808FAB\",\"interactionModel\":\"Dygraph.Interaction.defaultModel\",\"highlightCircleSize\":3,\"highlightSeriesBackgroundAlpha\":0.5,\"highlightSeriesOpts\":{\"strokeWidth\":3},\"hideOverlayOnMouseOut\":true},\"annotations\":[{\"x\":-7.247890513127099,\"shortText\":\"V1\",\"text\":\"V1\",\"width\":50,\"attachAtBottom\":false,\"series\":\"V1\"},{\"x\":-7.247890513127099,\"shortText\":\"V2\",\"text\":\"V2\",\"width\":50,\"attachAtBottom\":false,\"series\":\"V2\"},{\"x\":-7.247890513127099,\"shortText\":\"V3\",\"text\":\"V3\",\"width\":50,\"attachAtBottom\":false,\"series\":\"V3\"},{\"x\":-7.247890513127099,\"shortText\":\"V4\",\"text\":\"V4\",\"width\":50,\"attachAtBottom\":false,\"series\":\"V4\"},{\"x\":-7.247890513127099,\"shortText\":\"V5\",\"text\":\"V5\",\"width\":50,\"attachAtBottom\":false,\"series\":\"V5\"},{\"x\":-7.247890513127099,\"shortText\":\"V6\",\"text\":\"V6\",\"width\":50,\"attachAtBottom\":false,\"series\":\"V6\"},{\"x\":-7.247890513127099,\"shortText\":\"V7\",\"text\":\"V7\",\"width\":50,\"attachAtBottom\":false,\"series\":\"V7\"},{\"x\":-7.247890513127099,\"shortText\":\"V8\",\"text\":\"V8\",\"width\":50,\"attachAtBottom\":false,\"series\":\"V8\"},{\"x\":-7.247890513127099,\"shortText\":\"V9\",\"text\":\"V9\",\"width\":50,\"attachAtBottom\":false,\"series\":\"V9\"},{\"x\":-7.247890513127099,\"shortText\":\"V10\",\"text\":\"V10\",\"width\":50,\"attachAtBottom\":false,\"series\":\"V10\"},{\"x\":-7.247890513127099,\"shortText\":\"V11\",\"text\":\"V11\",\"width\":50,\"attachAtBottom\":false,\"series\":\"V11\"},{\"x\":-7.247890513127099,\"shortText\":\"V12\",\"text\":\"V12\",\"width\":50,\"attachAtBottom\":false,\"series\":\"V12\"},{\"x\":-7.247890513127099,\"shortText\":\"V13\",\"text\":\"V13\",\"width\":50,\"attachAtBottom\":false,\"series\":\"V13\"},{\"x\":-7.247890513127099,\"shortText\":\"V14\",\"text\":\"V14\",\"width\":50,\"attachAtBottom\":false,\"series\":\"V14\"},{\"x\":-7.247890513127099,\"shortText\":\"V15\",\"text\":\"V15\",\"width\":50,\"attachAtBottom\":false,\"series\":\"V15\"},{\"x\":-7.247890513127099,\"shortText\":\"V16\",\"text\":\"V16\",\"width\":50,\"attachAtBottom\":false,\"series\":\"V16\"},{\"x\":-7.247890513127099,\"shortText\":\"V17\",\"text\":\"V17\",\"width\":50,\"attachAtBottom\":false,\"series\":\"V17\"},{\"x\":-7.247890513127099,\"shortText\":\"V18\",\"text\":\"V18\",\"width\":50,\"attachAtBottom\":false,\"series\":\"V18\"},{\"x\":-7.247890513127099,\"shortText\":\"V19\",\"text\":\"V19\",\"width\":50,\"attachAtBottom\":false,\"series\":\"V19\"},{\"x\":-7.247890513127099,\"shortText\":\"V20\",\"text\":\"V20\",\"width\":50,\"attachAtBottom\":false,\"series\":\"V20\"}],\"shadings\":[],\"events\":[],\"format\":\"numeric\",\"data\":[[-7.247890513127099,-7.154856771996027,-7.061823030864955,-6.968789289733881,-6.875755548602809,-6.782721807471736,-6.689688066340664,-6.596654325209592,-6.503620584078519,-6.410586842947446,-6.317553101816373,-6.224519360685301,-6.131485619554229,-6.038451878423156,-5.945418137292084,-5.852384396161011,-5.759350655029938,-5.666316913898866,-5.573283172767794,-5.480249431636721,-5.387215690505649,-5.294181949374575,-5.201148208243503,-5.108114467112431,-5.015080725981358,-4.922046984850286,-4.829013243719213,-4.73597950258814,-4.642945761457068,-4.549912020325996,-4.456878279194923,-4.363844538063851,-4.270810796932778,-4.177777055801705,-4.084743314670633,-3.99170957353956,-3.898675832408488,-3.805642091277415,-3.712608350146343,-3.61957460901527,-3.526540867884198,-3.433507126753125,-3.340473385622052,-3.24743964449098,-3.154405903359907,-3.061372162228835,-2.968338421097763,-2.87530467996669,-2.782270938835617,-2.689237197704545,-2.596203456573472,-2.5031697154424,-2.410135974311327,-2.317102233180254,-2.224068492049182,-2.13103475091811,-2.038001009787037,-1.944967268655964,-1.851933527524892,-1.758899786393819,-1.665866045262747,-1.572832304131675],[-0.0496996737304459,-0.04962906640786747,-0.0495515749591669,-0.04946652819359337,-0.04937318949422004,-0.04927075050482557,-0.04915832451313651,-0.04903494100265922,-0.04889955034476631,-0.04875109210373638,-0.04858893672747966,-0.04841528325912197,-0.04824566562574268,-0.04803329431017301,-0.04780021713081285,-0.0475444172405142,-0.0472637229223527,-0.04695655470919713,-0.04663363613239157,-0.04626409390676745,-0.04585851866477476,-0.04541319632555638,-0.04491894828471645,-0.04441850087242676,-0.04388767153308517,-0.04341795947416355,-0.04307904834019645,-0.0427070937890557,-0.04229887412835921,-0.04185085355469482,-0.04135915152818266,-0.04081950916109513,-0.04022725232940882,-0.03957725118777856,-0.03886387573728856,-0.03808094706205969,-0.03722168385705264,-0.03627864504578254,-0.03524357959108047,-0.03408624937425036,-0.03283750792458041,-0.03146696970655487,-0.02994705438194467,-0.02825283845864282,-0.02624500927020654,-0.02432108815458008,-0.02211626484637414,-0.01859731967101515,-0.01439574792204573,-0.009996887462804542,-0.005293172986951969,-0.0003455839437111817,0,0,0,0,0,0,0,0,0,0],[0.1391606319694867,0.1390724483520828,0.1389756669411439,0.1388694494636745,0.1387528759212239,0.1386249366410034,0.1384845236099768,0.1383304210586934,0.138161293650349,0.1379756481101864,0.1377715167174793,0.1375439304643422,0.1372799054238207,0.1370083532977867,0.1367103253104703,0.1363832421052515,0.1360242941491099,0.1356304008296974,0.135190560726391,0.1347153001929028,0.1341937083467015,0.133621650114917,0.1330172017595997,0.1322793816912202,0.1314719094979427,0.1305607259065034,0.1295211304182934,0.1283801756533708,0.1271279792073849,0.1257536951537605,0.1242454201014709,0.1225900900935592,0.1207733674533924,0.1187795165985667,0.116591267746855,0.1141896673355486,0.1115539139521226,0.1086611822862507,0.105486586777317,0.1020155654673602,0.09819285188671249,0.09399737721950811,0.08938987006624061,0.0846573703065938,0.0798349415646491,0.07461417056193084,0.06912877501204603,0.06494123621198281,0.05998561045010696,0.05480523594831611,0.04937511770065935,0.04325030384504455,0.03646998956861241,0.02886044515213175,0.02063527541603159,0.0116733562850036,0.001837425049781647,0,0,0,0,0],[-0.09065246260150985,-0.09065938877065308,-0.0906669902324975,-0.0906753328262392,-0.09068448880614841,-0.0906945374501195,-0.0907055656591515,-0.09071766825636804,-0.09073094619704568,-0.0907454890389042,-0.09076120824328775,-0.09077596161631059,-0.0907579416645634,-0.09077515191219424,-0.09079404014708439,-0.0908147702053644,-0.09083752411471432,-0.09086237841195974,-0.09087444531417255,-0.09090301432249825,-0.09093436015416502,-0.09096842117239393,-0.09099348279391897,-0.09106426640073582,-0.09114623885872139,-0.09122180583286255,-0.09118828751356557,-0.09115150119951575,-0.09111112826525902,-0.09106681901975293,-0.09101818967751005,-0.09096481903443177,-0.09090624481953978,-0.09084195969100546,-0.09077140684176051,-0.09069397517448598,-0.09060899387734,-0.09051571879518995,-0.09041282783865023,-0.0902628655122769,-0.09013585175578803,-0.0899964617507451,-0.08984000348356182,-0.08918589517415876,-0.087857106686794,-0.08639617338980456,-0.08487058571791307,-0.08345684759904885,-0.08000545596060424,-0.07569260463467287,-0.07057436180052121,-0.06480856555048435,-0.05881498735650804,-0.05237177260882991,-0.04602794440372474,-0.03951452695045521,-0.03236576368687519,-0.02485551168449576,-0.01662161907842822,-0.006975080679957296,0,0],[0.1592952522807068,0.1592519903230393,0.159204510378085,0.1591524011980445,0.1590952114420429,0.1590324457787756,0.1589635606457192,0.1588879596733908,0.1588049880218629,0.1587139135167147,0.1586137666442456,0.1585020047889994,0.158369658334558,0.1582361521134216,0.1580896292620854,0.1579288215572401,0.1577523458635575,0.1575586480172518,0.1573409730880643,0.1571071714033322,0.1568505780948189,0.1565691845080659,0.1562746019510595,0.1558747532058478,0.1553101095482259,0.1546872454893173,0.1540195280156759,0.1532867089126564,0.1524824408517628,0.1515997576478065,0.1506310139211431,0.1495678188770508,0.1484009636286812,0.1471203414340868,0.1457148601564698,0.1441723461901337,0.1424794390580254,0.1406214776878402,0.1385824869328961,0.1363534180772682,0.1338981750118911,0.1312035371694715,0.1282473723186726,0.1249786134569145,0.1213507329899384,0.1173674810132282,0.1130905601831661,0.109285571552553,0.1057361343892807,0.1019052417275482,0.09773951507559731,0.09268883396649864,0.0872081683393969,0.08131055553512533,0.07448441908542668,0.06677221052388502,0.05830807712572855,0.05021680672689892,0.04005698572211178,0.02860045291931811,0.01546983094145509,0],[0.04698580508007603,0.04691538014942261,0.0468380888752081,0.04675326179841659,0.04666016419272569,0.04655798971699018,0.04644585350362303,0.04632278476184878,0.04618771888909019,0.04603948508356596,0.04587675533192274,0.04569802038321501,0.04550966435021694,0.04529531752306298,0.04506007217952756,0.04480189112656938,0.04451853969629242,0.04420748034317095,0.04386649205323243,0.04349193807464474,0.0430808711711571,0.0426300044400551,0.04214930165765502,0.04154102296476722,0.04074183518881646,0.03986884350032455,0.0389251113811056,0.03788936654530665,0.03675263786665148,0.03550507954512691,0.03413588582737308,0.03263319741241742,0.03098399873208287,0.02917400521636315,0.02718753956732526,0.02500739597071679,0.02261469111996006,0.01998870389900567,0.01710690271778049,0.01395720424650017,0.01048711928088755,0.006678706130597014,0.002497243150422583,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[-0.01079663071894731,-0.01067456129069353,-0.01054059024440002,-0.01039355718937565,-0.01023218860917418,-0.01005508688223231,-0.009860718464265577,-0.009647402224549311,-0.009413304003095717,-0.009156472719219017,-0.008875137222938537,-0.008569948538450185,-0.008264486749081796,-0.007895536411781741,-0.007490613937067729,-0.00704621365299779,-0.006558520872577763,-0.006024004766791021,-0.005453822568623139,-0.004810835916133205,-0.004105156231447436,-0.003330516778728981,-0.002477530864962846,-0.00159268108420722,-0.0007193314667174239,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[-0.1934192844584924,-0.1933258942790559,-0.1932233986719331,-0.1931109098670264,-0.1929874535282466,-0.1928519602709515,-0.1927032561597792,-0.1925400511925684,-0.1923609203731017,-0.1921642457442186,-0.1919479311510058,-0.1917079059523682,-0.1914365479676397,-0.1911498434251986,-0.1908351854775587,-0.1904898472885021,-0.1901108070195408,-0.1896941316054378,-0.189227496473218,-0.1887254119904632,-0.18817436976257,-0.1875694035429998,-0.1868950408424019,-0.1862017866768716,-0.1855204394999462,-0.1847692938828736,-0.1839406535438058,-0.1830312217946412,-0.1820331215726328,-0.1809377078111403,-0.1797354925601981,-0.1784160628064322,-0.1769679902805192,-0.1753787324709845,-0.1736345239869197,-0.1717202573259816,-0.1696193518682599,-0.1673136026937139,-0.1647827047144331,-0.161985521014978,-0.1589354911126902,-0.1555881413733063,-0.1519220876590323,-0.147848921255336,-0.143424043212401,-0.1382624623592637,-0.1326818985837213,-0.1265698983593847,-0.1186672962508445,-0.1095928049129365,-0.09944252315946588,-0.08861396097403046,-0.07717354500872335,-0.06491119471283423,-0.05117201468945842,-0.03592362939329773,-0.01918862346297847,-0.000868739657543127,0,0,0,0],[0.1603664353629179,0.1602561215783954,0.1601350523358913,0.160002178990742,0.159856350653151,0.1596963042033266,0.1595206532619395,0.1593278757120386,0.1591162981562192,0.1588840706167268,0.1586291100508931,0.1583491704648429,0.1580501537568158,0.1577140053739246,0.1573450829082611,0.1569401902950945,0.1564958082132576,0.1560078909660996,0.1554747158446288,0.1548874654569291,0.1542429597534912,0.1535356503248286,0.1527594347870662,0.1518956936657018,0.1509183868050287,0.1498400683870312,0.1486780547341058,0.1474027461845341,0.1460030966257564,0.144466982962875,0.1427811001142056,0.140930845769025,0.1389001939093411,0.1366715560001919,0.1342256286461644,0.1315412263943612,0.1285950982252516,0.125361726007722,0.1218131354240601,0.1179251936339357,0.1136515191311382,0.1089611814031842,0.1038168733038088,0.09794024853570171,0.09121216113317474,0.08346650157812775,0.07502377816109364,0.06655605651145372,0.05798615025565901,0.04878047565026554,0.03883594233161228,0.02847551767843605,0.01720987657004936,0.004871456650116538,0,0,0,0,0,0,0,0],[-0.1723255796532138,-0.1722181391609719,-0.172100223352847,-0.1719708108961048,-0.1718287808687048,-0.1716729030022794,-0.1715018267702506,-0.1713140683936197,-0.1711079921431739,-0.1708817782463005,-0.1706334618957716,-0.1703627784241488,-0.1700963905288733,-0.1697716068428894,-0.1694151570197012,-0.1690239513051272,-0.1685945643043283,-0.168122986188016,-0.1676150082461318,-0.1670482928497521,-0.1664263239301727,-0.1657436931644014,-0.1649852126321451,-0.1642321452639665,-0.16365001997159,-0.1629275421908661,-0.1619833856654647,-0.1609471750444045,-0.159809935167,-0.1585618158054792,-0.157192006347022,-0.1556886421574046,-0.154038701815213,-0.1522278943265205,-0.1502405353431298,-0.1480594113120207,-0.1456656303741537,-0.1430384594508532,-0.1401553117847223,-0.1370156928346605,-0.1335451630466299,-0.1297362919142709,-0.1255690786094206,-0.1209529433259662,-0.1159090761407651,-0.1104758541801295,-0.1046333540358618,-0.09925877790357976,-0.09408131991511814,-0.08840093399291206,-0.08220313923931589,-0.0751964055278159,-0.06564533380597744,-0.05468717857491937,-0.04385188702842764,-0.03269956904041078,-0.02046008660980146,-0.0061283619006683,0,0,0,0],[-0.06266501397409596,-0.06259442112210745,-0.06251694555433382,-0.06243191621507194,-0.06233859662405579,-0.06223617850869387,-0.06212377486510084,-0.06200041263026853,-0.06186502641316331,-0.06171646308936642,-0.06155356039186813,-0.06137567897657351,-0.06118714952557268,-0.06097246671461701,-0.06073685260040176,-0.0604782665356641,-0.06019447268638093,-0.05988314176455933,-0.05954495691950242,-0.05917016244751523,-0.05875882962974115,-0.05830753466582367,-0.05781726305498441,-0.05726596729485157,-0.05667266451811926,-0.05601835887542583,-0.05530925651505619,-0.05453101754994229,-0.05367690124647121,-0.0527395096578242,-0.05171072354650052,-0.05058163205936639,-0.04934245554610796,-0.04798246085257926,-0.04648986835537904,-0.04485174993375873,-0.04305391706982456,-0.041080802082298,-0.03891553217837255,-0.03655283986904368,-0.03394587337014126,-0.03108471180626403,-0.02794284667467341,-0.02461808812658589,-0.02109178278393158,-0.01685901075305936,-0.01210914599292,-0.0068673001829976,-0.002316782161155997,0,0,0,0,0,0,0,0,0,0,0,0,0],[-0.08879387985024549,-0.08869424400508247,-0.08858489378801433,-0.08846488205977676,-0.08833316933631639,-0.08818861478647846,-0.08802996636189801,-0.08785585005468903,-0.08766475894685108,-0.08745504936925941,-0.08722502173820464,-0.08697397076309707,-0.0867174047011328,-0.08641531509056471,-0.08608377208513258,-0.08571990356440078,-0.08532055277044284,-0.08488227196962624,-0.08440557030090136,-0.08387807966779301,-0.08329915821368331,-0.08266371170392263,-0.08195921858345351,-0.08122414222021496,-0.08048234170451418,-0.07967974680707861,-0.07881745288055644,-0.07787108636070622,-0.07683245027346665,-0.07569254844992468,-0.07444150760580408,-0.07306849182380032,-0.0715616086980487,-0.06990780632779391,-0.06809276026806527,-0.06610074945794883,-0.06391452004041408,-0.06151513544580366,-0.05888180037965754,-0.05598910395185597,-0.05281700161812468,-0.04933563089310632,-0.04551471879852573,-0.04142503446575169,-0.03707986172249706,-0.03251015178641913,-0.02749769388271957,-0.02144772823762509,-0.01482998266020679,-0.007427944850524763,0,0,0,0,0,0,0,0,0,0,0,0],[-0.1935892855529905,-0.1935455669209909,-0.1934975857761609,-0.1934449265279292,-0.1933871330623264,-0.1933237047734076,-0.1932540921277704,-0.1931776913631436,-0.1930938364061949,-0.1930017787277581,-0.1929006077103658,-0.1927887512289047,-0.1926565278223801,-0.1925218664614494,-0.1923740757424633,-0.1922118747057407,-0.1920338417244323,-0.1918381460151444,-0.1916192777902882,-0.1913834858581324,-0.1911247060927329,-0.1908407580214281,-0.1905308535593123,-0.190171304964019,-0.1897398184503338,-0.1892410015953788,-0.188642448730522,-0.1879855377002593,-0.1872645786555072,-0.1864733269939208,-0.1856049292721353,-0.1846518638445188,-0.1836058757142755,-0.182457905032613,-0.1811980086266615,-0.1798152738762438,-0.178297724186658,-0.1766322154265877,-0.1748043783620963,-0.1728030439449833,-0.1706018105539721,-0.1681859772322891,-0.1655375336047279,-0.1627750078648082,-0.1599563506106953,-0.1565140423122438,-0.1525849759981846,-0.1475995693633516,-0.1424832123416476,-0.1369286306016385,-0.1308551691772456,-0.1242931352653993,-0.1161466443629372,-0.1070923866931124,-0.09734309177198112,-0.08676084984505544,-0.07514695389658249,-0.06153120608682126,-0.04787418382149078,-0.03351169522569627,-0.01708875742546972,0],[-0.05164166782399666,-0.05152910244049246,-0.0514055620711364,-0.05126997666871036,-0.05112117185935312,-0.05095785877858815,-0.0507786229543263,-0.05058191234368523,-0.05036602584214369,-0.05012911376008206,-0.04986930249266118,-0.04958612337954891,-0.04929463002810733,-0.04895323135677446,-0.04857854673921332,-0.04816733101568633,-0.04771602931850414,-0.04722099911610427,-0.04668845260417714,-0.04609295485260431,-0.04543939646257458,-0.04472208451481109,-0.04393298387714006,-0.04310291819556127,-0.04229942867802736,-0.04144078259055609,-0.04059255012917683,-0.03966161604996195,-0.03863991704726821,-0.03751860365310633,-0.03628796358728285,-0.0349373376342753,-0.03345502731820662,-0.03182819357624373,-0.03004274555278382,-0.02808321855157261,-0.0259326401080683,-0.02357238406442044,-0.02098208028923355,-0.01814787259428145,-0.01502861013850588,-0.01160521911154907,-0.007849898931316723,-0.004080136106140584,-0.0004091206091852097,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0.2059234815065303,0.2058483485236491,0.2057658901673027,0.2056753922208868,0.2055760708247258,0.2054670656500587,0.2053474322383335,0.205216132589424,0.2050720185985926,0.2049137733268457,0.2047395750784867,0.2045450315157263,0.2043204750114122,0.2040890508729858,0.2038350631283601,0.2035563108497234,0.2032503542466056,0.2029139140983107,0.2025301611302006,0.2021241835041641,0.2016786207950446,0.2011895459292343,0.2006497161653751,0.2000451590411416,0.1993256086263739,0.1985134535214693,0.197579505689576,0.1965544990970382,0.1954295556271056,0.1941949315576051,0.1928399331654804,0.1913528241028784,0.1897207237425191,0.1879294956118634,0.1859636249497117,0.183806084322524,0.1814381860177694,0.1788394140968641,0.1759870070195436,0.1728442987722057,0.1694076401701903,0.1656359567234173,0.1615060920190378,0.1567873208145279,0.1514699709078366,0.1455860227573053,0.1392667188941355,0.1323750979889249,0.1235746042967305,0.113389928722208,0.1020027952417592,0.08971679892506486,0.07676458118401618,0.06278734043879575,0.04856258735798673,0.03364193975008317,0.01726663493136705,0,0,0,0,0],[0.03361003636274301,0.03355571718345203,0.03349610195148379,0.03343067430935086,0.0333588675604013,0.03328005978423569,0.03319356858830471,0.03309864603100307,0.03299447741570315,0.03288020907170889,0.03275517367515673,0.03262036512648345,0.03248743225388398,0.03232366055881435,0.03214392131446868,0.03194665770547042,0.03173016606481943,0.03149276486187283,0.03123738621221202,0.03095173663264923,0.03063823849723262,0.03029420049670772,0.02991371770189554,0.02951519299157914,0.02910985695820176,0.02869150638429141,0.02825726847719456,0.02778069291022549,0.02725765181381279,0.02668361485619772,0.02605361000386779,0.02536218045618105,0.02460333738116945,0.02377050804314155,0.0228564788728094,0.02185333298792384,0.02075238168527458,0.01954409253615488,0.01821813590267573,0.0167623990762365,0.01516508789268211,0.013412021968628,0.01147955960933575,0.009751193779055129,0.008301092812848332,0.006510571573907942,0.004379347515539671,0.0008888236704105523,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0.01002294242894193,0.009887892420716396,0.009739675203333914,0.009577006989878697,0.009398478824924445,0.009202544379374435,0.008987506567026682,0.00875150305415222,0.008492492603364828,0.008208262621468877,0.007896651345193651,0.007557764508608182,0.007213681187229509,0.006804731671864329,0.006355910018735596,0.005863327933074787,0.005322713695437829,0.004729572283432627,0.004090231585494881,0.003376749506047065,0.002593699412794836,0.001734029950265113,0.0007727375448927671,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[-0.04869727159265496,-0.04863352468222551,-0.04856356252666327,-0.0484867791469477,-0.04840250948045507,-0.0483100236136836,-0.0482085204206404,-0.04809712039910487,-0.04797485683561383,-0.04784066192826025,-0.04769335199154874,-0.04753201327474801,-0.04736397069360291,-0.04717022859163955,-0.04695759687346045,-0.04672423377607444,-0.04646811742892901,-0.04618709028193888,-0.04588412246713593,-0.04554609701334424,-0.04517511561166893,-0.04476802227184508,-0.04432448487138884,-0.0438219437639669,-0.04325515943044389,-0.04262450266198681,-0.04196779774962788,-0.04124706491902072,-0.04045606152717904,-0.03958793628113199,-0.03863516989530198,-0.03758950996305028,-0.03644189947827849,-0.03518239838797467,-0.03380009749623449,-0.03228302397432581,-0.03061803767537327,-0.02879071845397013,-0.02678533944679234,-0.02459877459323563,-0.02218458343350653,-0.01953501352952805,-0.01663213632182211,-0.01330142379081786,-0.009475402440345577,-0.005611869546568614,-0.00145592472316594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0.0864501375211414,0.0863681473610306,0.08627816326153517,0.08617940582349568,0.08607101965769322,0.08595206597824637,0.0858215144864159,0.08567823453390015,0.08552098574254052,0.08534840820307377,0.08515899906120017,0.08495087798278858,0.08472015248275476,0.08446949091706879,0.08419439016231048,0.08389246755224398,0.08356111013745383,0.08319744013327478,0.08279648149209605,0.08235826432546756,0.08187731909728409,0.0813493747375883,0.0807660247176613,0.08015803781536172,0.07955440218847354,0.07892088252295511,0.07829553274822662,0.07760921214246078,0.07685597612490032,0.07602930052550279,0.07512202507570077,0.07412629138958091,0.0730334748983045,0.07183411014821799,0.07051780881560984,0.06907316972733431,0.06748768007008098,0.0657476048328091,0.0638377435025637,0.06173126285054533,0.05942994640849001,0.05690426152485623,0.05413177341784926,0.05088725031232019,0.0470725038370078,0.04270785139596415,0.03792754740406752,0.03257070766508528,0.02633130710205884,0.01917728650925387,0.01107591917756822,0.002460547505290907,0,0,0,0,0,0,0,0,0,0],[0.08228518618226022,0.08218521461368959,0.08207549594060619,0.08195507983235548,0.08182292330202927,0.08167788167034623,0.08151869862802988,0.08134399513778612,0.08115225553009235,0.0809417973878467,0.08071062159802404,0.08045555523834449,0.08017376644483223,0.07986793406047994,0.07953228342765913,0.07916390767777566,0.07875961818392604,0.0783158383091113,0.07782653420915882,0.07729184961268526,0.07670503583226689,0.07606113773360815,0.07536214214240912,0.07454638702592253,0.07356698959729038,0.07248072890406926,0.07128883565934807,0.0699807342946671,0.06854509466178992,0.0669694819370143,0.0652402489166779,0.0633424178116089,0.06125955051668134,0.05897360623181258,0.05646478520118833,0.05371135721751222,0.05068947341824074,0.04737296031581539,0.04373313958186666,0.03974547974102734,0.03536194008425123,0.03055100620855045,0.02527355779556511,0.01949078933547188,0.013166161414162,0.006424260466985845,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0.07521458939395496,0.07510379614467827,0.0749822006903981,0.07484874982955717,0.07470228767506627,0.0745415456435555,0.07436513147165298,0.07417151718480855,0.07395902620075034,0.0737258235726604,0.07346996589517543,0.07319027590783693,0.07289928662916337,0.0725627542178726,0.07219341029514929,0.07178805546820273,0.0713431746505072,0.07085494341907994,0.0703255148432696,0.06973804292269549,0.0690932959063303,0.06838578653837515,0.0676120084708583,0.06676906461792752,0.06590789399445215,0.06496393922295808,0.06397849439610263,0.06289696991516726,0.06170999813249019,0.060407298066327,0.05897758635190518,0.05740847951031626,0.05568638668874572,0.0537963919430078,0.05172212504278394,0.0494456196812031,0.0469471579010521,0.04420510195405021,0.04119589296300047,0.03790939410719143,0.03428616452054489,0.0303096767726343,0.02594864688879374,0.02131331844319227,0.01642904167577182,0.01100075364645202,0.005064492190439821,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]],\"plugins\":{\"Unzoom\":\"{}\"}},\"evals\":[\"attrs.interactionModel\",\"plugins.Unzoom\"],\"jsHooks\":[]}"},{"path":"/reference/coefplot-package.html","id":null,"dir":"Reference","previous_headings":"","what":"coefplot: Plots Coefficients from Fitted Models — coefplot-package","title":"coefplot: Plots Coefficients from Fitted Models — coefplot-package","text":"Plots coefficients model objects. quickly shows user point estimates confidence intervals fitted models.","code":""},{"path":"/reference/coefplot-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"coefplot: Plots Coefficients from Fitted Models — coefplot-package","text":"Maintainer: Jared Lander packages@jaredlander.com (ORCID)","code":""},{"path":"/reference/coefplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Dotplot for model coefficients — coefplot","title":"Dotplot for model coefficients — coefplot","text":"graphical display coefficients standard errors fitted model coefplot S3 generic method plotting coefficients fitted model. can extended new methods types models currently available. Dotplot coefficients","code":""},{"path":"/reference/coefplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dotplot for model coefficients — coefplot","text":"","code":"coefplot(model, ...)  # S3 method for default coefplot(   model,   title = \"Coefficient Plot\",   xlab = \"Value\",   ylab = \"Coefficient\",   innerCI = 1,   outerCI = 2,   innerType = 1,   outerType = 1,   lwdInner = 1 + interactive * 2,   lwdOuter = if (interactive) 1 else unname((Sys.info()[\"sysname\"] != \"Windows\") * 0.5),   pointSize = 3 + interactive * 5,   color = \"blue\",   shape = 16,   cex = 0.8,   textAngle = 0,   numberAngle = 0,   zeroColor = \"grey\",   zeroLWD = 1,   zeroType = 2,   facet = FALSE,   scales = \"free\",   sort = c(\"natural\", \"magnitude\", \"alphabetical\"),   decreasing = FALSE,   numeric = FALSE,   fillColor = \"grey\",   alpha = 1/2,   horizontal = FALSE,   factors = NULL,   only = NULL,   shorten = TRUE,   intercept = TRUE,   interceptName = \"(Intercept)\",   coefficients = NULL,   predictors = NULL,   strict = FALSE,   trans = identity,   interactive = FALSE,   newNames = NULL,   plot = TRUE,   ... )  # S3 method for data.frame coefplot(   model,   title = \"Coefficient Plot\",   xlab = \"Value\",   ylab = \"Coefficient\",   interactive = FALSE,   lwdInner = 1 + interactive * 2,   lwdOuter = if (interactive) 1 else unname((Sys.info()[\"sysname\"] != \"Windows\") * 0.5),   pointSize = 3 + interactive * 5,   color = \"blue\",   cex = 0.8,   textAngle = 0,   numberAngle = 0,   shape = 16,   innerType = 1,   outerType = 1,   outerCI = 2,   innerCI = 1,   multi = FALSE,   zeroColor = \"grey\",   zeroLWD = 1,   zeroType = 2,   numeric = FALSE,   fillColor = \"grey\",   alpha = 1/2,   horizontal = FALSE,   facet = FALSE,   scales = \"free\",   value = \"Value\",   coefficient = \"Coefficient\",   errorHeight = 0,   dodgeHeight = 1,   ... )  # S3 method for lm coefplot(...)  # S3 method for glm coefplot(...)  # S3 method for workflow coefplot(model, ...)  # S3 method for model_fit coefplot(model, ...)  # S3 method for rxGlm coefplot(...)  # S3 method for rxLinMod coefplot(...)  # S3 method for rxLogit coefplot(...)"},{"path":"/reference/coefplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dotplot for model coefficients — coefplot","text":"model data.frame like built coefplot(..., plot=FALSE) ... Arguments title name plot, NULL name given xlab x label ylab y label innerCI wide inner confidence interval , normally 1 standard deviation.  0, inner confidence interval. outerCI wide outer confidence interval , normally 2 standard deviations.  0, outer confidence interval. innerType type inner CI line, 0 mean line outerType type outer CI line, 0 mean line lwdInner thickness inner confidence interval lwdOuter thickness outer confidence interval pointSize Size coefficient point color color points lines shape shape points cex text size multiplier, currently used textAngle angle coefficient labels, 0 horizontal numberAngle angle value labels, 0 horizontal zeroColor color line indicating 0 zeroLWD thickness 0 line zeroType type 0 line, 0 mean line facet logical; coefficients faceted variables, numeric coefficients (including intercept) one facet scales way axes treated faceted plot.  Can c(\"fixed\", \"free\", \"free_x\", \"free_y\") sort Determines sort order coefficients.  Possible values c(\"natural\", \"magnitude\", \"alphabetical\") decreasing logical; Whether coefficients ascending descending numeric logical; true factors exactly one value, displayed horizontal graph continuous confidence bounds. fillColor color confidence bounds numeric factor alpha transparency level numeric factor's confidence bound horizontal logical; plot displayed horizontally factors Vector factor variables ones shown logical; factors value determines interactions treated.  True means just variable shown interactions.  False means interactions included. Currently available. shorten logical character; FALSE coefficients factor levels include variable name.  TRUE coefficients factor levels stripped variable names.  character vector variables coefficients factor levels associated variables variable names stripped.  Currently available. intercept logical; Whether Intercept coefficient plotted interceptName Specifies name intercept case default \"(Intercept\"). Currently available. coefficients character vector specifying factor coefficients keep.  keep levels interactions, even listed. predictors character vector specifying coefficients keep.  individual coefficient can specified.  Use predictors specify entire factors. strict TRUE predictors matched coefficients, interactions trans transformation function apply values confidence intervals.  identity default.  Use invlogit binary regression. interactive `TRUE` interactive plot generated instead `[ggplot2]` newNames Named character vector new names coefficients plot logical; plot drawn, false data.frame values returned multi logical; multiplot leave colors determined legend, FALSE make colors value Name variable value metric coefficient Name variable coefficient names errorHeight Height error bars dodgeHeight Amount vertical dodging","code":""},{"path":"/reference/coefplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dotplot for model coefficients — coefplot","text":"ggplot2 object data.frame.  See details coefplot.lm information plot TRUE ggplot object returned.  Otherwise data.frame listing coefficients confidence bands returned. ggplot graph object","code":""},{"path":"/reference/coefplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dotplot for model coefficients — coefplot","text":"graphical display coefficients standard errors fitted model, function uses data.frame input.","code":""},{"path":[]},{"path":"/reference/coefplot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Dotplot for model coefficients — coefplot","text":"Jared P. Lander","code":""},{"path":"/reference/coefplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dotplot for model coefficients — coefplot","text":"","code":"data(diamonds) head(diamonds) #> # A tibble: 6 × 10 #>   carat cut       color clarity depth table price     x     y     z #>   <dbl> <ord>     <ord> <ord>   <dbl> <dbl> <int> <dbl> <dbl> <dbl> #> 1  0.23 Ideal     E     SI2      61.5    55   326  3.95  3.98  2.43 #> 2  0.21 Premium   E     SI1      59.8    61   326  3.89  3.84  2.31 #> 3  0.23 Good      E     VS1      56.9    65   327  4.05  4.07  2.31 #> 4  0.29 Premium   I     VS2      62.4    58   334  4.2   4.23  2.63 #> 5  0.31 Good      J     SI2      63.3    58   335  4.34  4.35  2.75 #> 6  0.24 Very Good J     VVS2     62.8    57   336  3.94  3.96  2.48 model1 <- lm(price ~ carat + cut*color, data=diamonds) model2 <- lm(price ~ carat*color, data=diamonds) model3 <- glm(price > 10000 ~ carat*color, data=diamonds) coefplot(model1)  coefplot(model2)  coefplot(model3)  coefplot(model1, predictors=\"color\")  coefplot(model1, predictors=\"color\", strict=TRUE)  coefplot(model1, coefficients=c(\"(Intercept)\", \"color.Q\"))  coefplot(model1, predictors=\"cut\", coefficients=c(\"(Intercept)\", \"color.Q\"), strict=TRUE)  coefplot(model1, predictors=\"cut\", coefficients=c(\"(Intercept)\", \"color.Q\"), strict=FALSE)  coefplot(model1, predictors=\"cut\", coefficients=c(\"(Intercept)\", \"color.Q\"),  strict=TRUE, newNames=c(color.Q=\"Color\", \"cut^4\"=\"Fourth\"))  coefplot(model1, predictors=c(\"(Intercept)\", \"carat\"), newNames=c(carat=\"Size\"))  coefplot(model1, predictors=c(\"(Intercept)\", \"carat\"),  newNames=c(carat=\"Size\", \"(Intercept)\"=\"Constant\"))    data(diamonds) head(diamonds) #> # A tibble: 6 × 10 #>   carat cut       color clarity depth table price     x     y     z #>   <dbl> <ord>     <ord> <ord>   <dbl> <dbl> <int> <dbl> <dbl> <dbl> #> 1  0.23 Ideal     E     SI2      61.5    55   326  3.95  3.98  2.43 #> 2  0.21 Premium   E     SI1      59.8    61   326  3.89  3.84  2.31 #> 3  0.23 Good      E     VS1      56.9    65   327  4.05  4.07  2.31 #> 4  0.29 Premium   I     VS2      62.4    58   334  4.2   4.23  2.63 #> 5  0.31 Good      J     SI2      63.3    58   335  4.34  4.35  2.75 #> 6  0.24 Very Good J     VVS2     62.8    57   336  3.94  3.96  2.48 model1 <- lm(price ~ carat + cut*color, data=diamonds) model2 <- lm(price ~ carat*color, data=diamonds) coefplot(model1)  coefplot(model2)  coefplot(model1, predictors=\"color\")  coefplot(model1, predictors=\"color\", strict=TRUE)  coefplot(model1, coefficients=c(\"(Intercept)\", \"color.Q\"))   data(diamonds) head(diamonds) #> # A tibble: 6 × 10 #>   carat cut       color clarity depth table price     x     y     z #>   <dbl> <ord>     <ord> <ord>   <dbl> <dbl> <int> <dbl> <dbl> <dbl> #> 1  0.23 Ideal     E     SI2      61.5    55   326  3.95  3.98  2.43 #> 2  0.21 Premium   E     SI1      59.8    61   326  3.89  3.84  2.31 #> 3  0.23 Good      E     VS1      56.9    65   327  4.05  4.07  2.31 #> 4  0.29 Premium   I     VS2      62.4    58   334  4.2   4.23  2.63 #> 5  0.31 Good      J     SI2      63.3    58   335  4.34  4.35  2.75 #> 6  0.24 Very Good J     VVS2     62.8    57   336  3.94  3.96  2.48 model1 <- lm(price ~ carat + cut*color, data=diamonds) model2 <- lm(price ~ carat*color, data=diamonds) df1 <- coefplot(model1, plot=FALSE) df2 <- coefplot(model2, plot=FALSE) coefplot(df1)  coefplot(df2)    if (FALSE) { data(diamonds) mod3 <- rxLinMod(price ~ carat + cut + x, data=diamonds) coefplot(mod3) } if (FALSE) { data(diamonds) mod6 <- rxLogit(price > 10000 ~ carat + cut + x, data=diamonds) coefplot(mod6) }"},{"path":"/reference/doRegex.html","id":null,"dir":"Reference","previous_headings":"","what":"doRegex — doRegex","title":"doRegex — doRegex","text":"Helper function matching coefficients","code":""},{"path":"/reference/doRegex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"doRegex — doRegex","text":"","code":"doRegex(x, matchAgainst, pattern = \"(^| )%s($|,|=)\")"},{"path":"/reference/doRegex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"doRegex — doRegex","text":"x Root pattern search matchAgainst Text search pattern Regex pattern build x ","code":""},{"path":"/reference/doRegex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"doRegex — doRegex","text":"list indices matchAgainst matched","code":""},{"path":"/reference/doRegex.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"doRegex — doRegex","text":"used getCoefsFromPredictorsRevo finding matches predictors coefficients","code":""},{"path":"/reference/doRegex.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"doRegex — doRegex","text":"Jared P. Lander","code":""},{"path":"/reference/extract.coef.html","id":null,"dir":"Reference","previous_headings":"","what":"extract.coef.default — extract.coef","title":"extract.coef.default — extract.coef","text":"Extract Coefficient Information Models","code":""},{"path":"/reference/extract.coef.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract.coef.default — extract.coef","text":"","code":"extract.coef(model, ...)  # S3 method for default extract.coef(model, ...)  # S3 method for lm extract.coef(model, ...)  # S3 method for glm extract.coef(model, ...)  # S3 method for rxLinMod extract.coef(model, ...)  # S3 method for rxGlm extract.coef(model, ...)  # S3 method for rxLogit extract.coef(model, ...)  # S3 method for glmnet extract.coef(model, lambda = stats::median(model$lambda), ...)  # S3 method for cv.glmnet extract.coef(model, lambda = \"lambda.min\", ...)  # S3 method for maxLik extract.coef(model, ...)  # S3 method for xgb.Booster extract.coef(   model,   feature_names = NULL,   removeNonSelected = TRUE,   zero_threshold = 0.001,   ... )"},{"path":"/reference/extract.coef.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extract.coef.default — extract.coef","text":"model Model object extract information . ... arguments feature_names Names coefficients removeNonSelected TRUE (default) return non-selected (0) coefficients zero_threshold Since coefficients  xgboost exactly zero,  threshold coefficient considered zero","code":""},{"path":"/reference/extract.coef.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"extract.coef.default — extract.coef","text":"data.frame containing coefficient, standard  error variable name.","code":""},{"path":"/reference/extract.coef.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"extract.coef.default — extract.coef","text":"Gets coefficient values standard errors, variable names model.","code":""},{"path":"/reference/extract.coef.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"extract.coef.default — extract.coef","text":"Jared P. Lander","code":""},{"path":"/reference/extract.coef.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"extract.coef.default — extract.coef","text":"","code":"if (FALSE) { library(ggplot2) data(diamonds) library(coefplot) mod1 <- lm(price ~ carat + cut + x, data=diamonds) mod2 <- glm(price > 10000 ~ carat + cut + x, data=diamonds, family=binomial(link=\"logit\")) mod3 <- lm(price ~ carat*cut + x, data=diamonds) extract.coef(mod1) extract.coef(mod2) extract.coef(mod3)  mod4 <- rxLinMod(price ~ carat*cut + x, diamonds) }  if (FALSE) { library(ggplot2) library(coefplot) data(diamonds) mod1 <- lm(price ~ carat + cut + x, data=diamonds) extract.coef(mod1) }  if (FALSE) { library(ggplot2) data(diamonds) library(coefplot) mod1 <- lm(price ~ carat + cut + x, data=diamonds) extract.coef(mod1) }  if (FALSE) { library(ggplot2) data(diamonds) library(coefplot) mod2 <- glm(price > 10000 ~ carat + cut + x, data=diamonds, family=binomial(link=\"logit\")) extract.coef(mod2) }  if (FALSE) { library(ggplot2) data(diamonds) mod3 <- rxLinMod(price ~ carat + cut + x, data=diamonds) extract.coef(mod3) }  if (FALSE) { library(ggplot2) data(diamonds) mod4 <- rxGlm(price ~ carat + cut + x, data=diamonds) mod5 <- rxGlm(price > 10000 ~ carat + cut + x, data=diamonds, fmaily=\"binomial\") extract.coef(mod4) extract.coef(mod5) }  if (FALSE) { library(ggplot2) data(diamonds) mod6 <- rxLogit(price > 10000 ~ carat + cut + x, data=diamonds) extract.coef(mod6) }  if(requireNamespace('glmnet', quietly=TRUE)){ library(glmnet) library(ggplot2) library(useful) data(diamonds) diaX <- build.x(price ~ carat + cut + x - 1, data=diamonds, contrasts = TRUE) diaY <- build.y(price ~ carat + cut + x - 1, data=diamonds) modG1 <- glmnet(x=diaX, y=diaY) extract.coef(modG1) } #>                   Value SE Coefficient #> (Intercept) -2172.33231 NA (Intercept) #> carat        7607.76091 NA       carat #> cutFair      -870.91269 NA     cutFair #> cutGood       -50.45493 NA     cutGood #> cutIdeal      163.14207 NA    cutIdeal  if(requireNamespace('glmnet', quietly=TRUE)){ library(glmnet) library(ggplot2) library(useful) data(diamonds) diaX <- useful::build.x(price ~ carat + cut + x - 1, data=diamonds,   contrasts=FALSE) diaY <- useful::build.y(price ~ carat + cut + x - 1, data=diamonds) modG1 <- cv.glmnet(x=diaX, y=diaY, k=5) extract.coef(modG1) } #>                     Value SE  Coefficient #> (Intercept)   1305.104965 NA  (Intercept) #> carat        10053.977529 NA        carat #> cutFair      -1510.568409 NA      cutFair #> cutGood       -354.484329 NA      cutGood #> cutVery Good    22.573009 NA cutVery Good #> cutPremium      -4.642002 NA   cutPremium #> cutIdeal       319.428622 NA     cutIdeal #> x             -950.756929 NA            x  # \\dontshow{ if(requireNamespace('maxLik', quietly=TRUE)) { # } library(maxLik) loglik <- function(param) {  mu <- param[1]  sigma <- param[2]  ll <- -0.5*N*log(2*pi) - N*log(sigma) - sum(0.5*(x - mu)^2/sigma^2) ll } x <- rnorm(1000, 1, 2) # use mean=1, stdd=2 N <- length(x) res <- maxLik(loglik, start=c(0,1)) # use 'wrong' start values extract.coef(res) } #>      Value         SE Coefficient #> 1 1.019756 0.06305976           1 #> 2 1.994177 0.04456984           2  # \\dontshow{ if(requireNamespace('xgboost', quietly=TRUE)){# } library(xgboost) data(diamonds, package='ggplot2') diaX <- useful::build.x(price ~ carat + cut + x, data=diamonds, contrasts=FALSE) diaY <- useful::build.y(price ~ carat + cut + x, data=diamonds) xg1 <- xgb.train(data=xgb.DMatrix(data=diaX, label=diaY),  booster='gblinear', objective='reg:squarederror', eval_metric='rmse', nrounds=50 ) extract.coef(xg1) extract.coef(xg1, zero_threshold=0) extract.coef(xg1, feature_names=colnames(diaX)) } #> # A tibble: 8 × 3 #>     Value    SE Coefficient  #>     <dbl> <dbl> <chr>        #> 1   115.     NA (Intercept)  #> 2  7658.     NA carat        #> 3 -4514.     NA cutFair      #> 4 -3403.     NA cutGood      #> 5 -3014.     NA cutVery Good #> 6 -3086.     NA cutPremium   #> 7 -2726.     NA cutIdeal     #> 8    81.7    NA x"},{"path":"/reference/extractPath.html","id":null,"dir":"Reference","previous_headings":"","what":"extractPath — extractPath","title":"extractPath — extractPath","text":"Extracts coefficient path elastic net","code":""},{"path":"/reference/extractPath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extractPath — extractPath","text":"","code":"extractPath(model, ...)  # S3 method for glmnet extractPath(model, intercept = FALSE, ...)  # S3 method for cv.glmnet extractPath(model, ...)"},{"path":"/reference/extractPath.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extractPath — extractPath","text":"model glmnet model ... arguments intercept FALSE (default), intercept provided","code":""},{"path":"/reference/extractPath.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"extractPath — extractPath","text":"link[tibble]{tibble} holding coefficients various lambdas","code":""},{"path":"/reference/extractPath.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"extractPath — extractPath","text":"replacement plot visualizing coefficient path resulting elastic net.","code":""},{"path":"/reference/extractPath.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"extractPath — extractPath","text":"Jared P. Lander","code":""},{"path":"/reference/extractPath.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"extractPath — extractPath","text":"","code":"library(glmnet) data(diamonds, package='ggplot2') diaX <- useful::build.x(price ~ carat + cut + x - 1, data=diamonds, contrasts = TRUE) diaY <- useful::build.y(price ~ carat + cut + x - 1, data=diamonds) modG1 <- glmnet(x=diaX, y=diaY) extractPath(modG1) #> # A tibble: 79 × 8 #>    lambda  carat cutFair cutGood `cutVery Good` cutPremium cutIdeal     x #>     <dbl>  <dbl>   <dbl>   <dbl>          <dbl>      <dbl>    <dbl> <dbl> #>  1  0.953 10054.  -1511.   -354.          22.6       -4.64     319. -951. #>  2  1.05  10034.  -1509.   -354.          21.5       -5.10     318. -942. #>  3  1.14  10011.  -1508.   -354.          20.2       -5.60     317. -933. #>  4  1.23   9985.  -1506.   -354.          18.9       -6.16     316. -922. #>  5  1.33   9955.  -1504.   -354.          17.5       -6.77     314. -909. #>  6  1.42   9924.  -1502.   -353.          16.0       -7.29     313. -896. #>  7  1.51   9890.  -1499.   -353.          14.5       -7.78     312. -882. #>  8  1.60   9852.  -1497.   -352.          12.9       -8.24     310. -866. #>  9  1.70   9809.  -1493.   -351.          11.3       -8.67     309. -848. #> 10  1.79   9765.  -1490.   -350.           9.69      -8.91     307. -830. #> # ℹ 69 more rows  modG2 <- cv.glmnet(x=diaX, y=diaY, nfolds=5) extractPath(modG2) #> # A tibble: 79 × 8 #>    lambda  carat cutFair cutGood `cutVery Good` cutPremium cutIdeal     x #>     <dbl>  <dbl>   <dbl>   <dbl>          <dbl>      <dbl>    <dbl> <dbl> #>  1  0.953 10054.  -1511.   -354.          22.6       -4.64     319. -951. #>  2  1.05  10034.  -1509.   -354.          21.5       -5.10     318. -942. #>  3  1.14  10011.  -1508.   -354.          20.2       -5.60     317. -933. #>  4  1.23   9985.  -1506.   -354.          18.9       -6.16     316. -922. #>  5  1.33   9955.  -1504.   -354.          17.5       -6.77     314. -909. #>  6  1.42   9924.  -1502.   -353.          16.0       -7.29     313. -896. #>  7  1.51   9890.  -1499.   -353.          14.5       -7.78     312. -882. #>  8  1.60   9852.  -1497.   -352.          12.9       -8.24     310. -866. #>  9  1.70   9809.  -1493.   -351.          11.3       -8.67     309. -848. #> 10  1.79   9765.  -1490.   -350.           9.69      -8.91     307. -830. #> # ℹ 69 more rows"},{"path":"/reference/get.assign.html","id":null,"dir":"Reference","previous_headings":"","what":"get.assign — get.assign","title":"get.assign — get.assign","text":"assignment vector model","code":""},{"path":"/reference/get.assign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get.assign — get.assign","text":"","code":"get.assign(model, ...)  # S3 method for lm get.assign(model, ...)  # S3 method for glm get.assign(model, ...)"},{"path":"/reference/get.assign.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get.assign — get.assign","text":"model Fitted model ... arguments","code":""},{"path":"/reference/get.assign.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get.assign — get.assign","text":"assignment vector","code":""},{"path":"/reference/get.assign.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get.assign — get.assign","text":"Gets relative positions predictors","code":""},{"path":"/reference/get.assign.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"get.assign — get.assign","text":"Jared P. Lander","code":""},{"path":"/reference/getCoefsFromPredictors.html","id":null,"dir":"Reference","previous_headings":"","what":"getCoefsFromPredictors — getCoefsFromPredictors","title":"getCoefsFromPredictors — getCoefsFromPredictors","text":"Generic function finding coefficients go predictors","code":""},{"path":"/reference/getCoefsFromPredictors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"getCoefsFromPredictors — getCoefsFromPredictors","text":"","code":"getCoefsFromPredictors(model, predictors, ...)  # S3 method for default getCoefsFromPredictors(model, predictors = NULL, strict = FALSE, ...)  getCoefsFromPredictorsRevo(model, predictors = NULL, strict = FALSE, ...)  # S3 method for rxLinMod getCoefsFromPredictors(model, predictors = NULL, strict = FALSE, ...)  # S3 method for rxLogit getCoefsFromPredictors(model, predictors = NULL, strict = FALSE, ...)  # S3 method for rxGlm getCoefsFromPredictors(model, predictors = NULL, strict = FALSE, ...)"},{"path":"/reference/getCoefsFromPredictors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"getCoefsFromPredictors — getCoefsFromPredictors","text":"model fitted model predictors character vector predictors match ... arguments strict Logical specifying interactions terms included (FALSE) just main terms (TRUE).","code":""},{"path":"/reference/getCoefsFromPredictors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"getCoefsFromPredictors — getCoefsFromPredictors","text":"character vector coefficients listing coefficients match predictor","code":""},{"path":"/reference/getCoefsFromPredictors.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"getCoefsFromPredictors — getCoefsFromPredictors","text":"user specifies predictors whose coefficients included coefplot.","code":""},{"path":"/reference/getCoefsFromPredictors.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"getCoefsFromPredictors — getCoefsFromPredictors","text":"Jared P. Lander","code":""},{"path":"/reference/invlogit.html","id":null,"dir":"Reference","previous_headings":"","what":"invlogit — invlogit","title":"invlogit — invlogit","text":"Calculates inverse logit","code":""},{"path":"/reference/invlogit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"invlogit — invlogit","text":"","code":"invlogit(x)"},{"path":"/reference/invlogit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"invlogit — invlogit","text":"x Vector numbers","code":""},{"path":"/reference/invlogit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"invlogit — invlogit","text":"x mapped [0, 1]","code":""},{"path":"/reference/invlogit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"invlogit — invlogit","text":"Maps real line [0, 1]","code":""},{"path":"/reference/invlogit.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"invlogit — invlogit","text":"Jared P. Lander","code":""},{"path":"/reference/invlogit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"invlogit — invlogit","text":"","code":"invlogit(3) #> [1] 0.9525741 invlogit(-6:6) #>  [1] 0.002472623 0.006692851 0.017986210 0.047425873 0.119202922 0.268941421 #>  [7] 0.500000000 0.731058579 0.880797078 0.952574127 0.982013790 0.993307149 #> [13] 0.997527377 invlogit(c(-1, 1, 2)) #> [1] 0.2689414 0.7310586 0.8807971"},{"path":"/reference/matchCoefs.html","id":null,"dir":"Reference","previous_headings":"","what":"matchCoefs — matchCoefs","title":"matchCoefs — matchCoefs","text":"Match coefficients predictors","code":""},{"path":"/reference/matchCoefs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"matchCoefs — matchCoefs","text":"","code":"matchCoefs(model, ...)  # S3 method for default matchCoefs(model, ...)"},{"path":"/reference/matchCoefs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"matchCoefs — matchCoefs","text":"model Fitted model ... arguments","code":""},{"path":"/reference/matchCoefs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"matchCoefs — matchCoefs","text":"data.frame matching predictors coefficients","code":""},{"path":"/reference/matchCoefs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"matchCoefs — matchCoefs","text":"Matches coefficients predictors using information model matrices","code":""},{"path":"/reference/matchCoefs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"matchCoefs — matchCoefs","text":"Jared P. Lander","code":""},{"path":"/reference/matchCoefs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"matchCoefs — matchCoefs","text":"","code":"if (FALSE) { require(reshape2) require(plyr) data(\"tips\", package=\"reshape2\") mod1 <- lm(tip ~ total_bill * sex + day, tips) mod2 <- lm(tip ~ total_bill * sex + day - 1, tips) mod3 <- glm(tip ~ total_bill * sex + day, tips, family=gaussian(link=\"identity\")) mod4 <- lm(tip ~ (total_bill + sex + day)^3, tips) mod5 <- lm(tip ~ total_bill * sex + day + I(total_bill^2), tips) coefplot:::matchCoefs(mod1) coefplot:::matchCoefs(mod2) coefplot:::matchCoefs(mod3) coefplot:::matchCoefs(mod4) coefplot:::matchCoefs(mod5) }"},{"path":"/reference/multiplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot multiple coefplots — multiplot","title":"Plot multiple coefplots — multiplot","text":"Plot coefficients multiple models","code":""},{"path":"/reference/multiplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot multiple coefplots — multiplot","text":"","code":"multiplot(   ...,   title = \"Coefficient Plot\",   xlab = \"Value\",   ylab = \"Coefficient\",   innerCI = 1,   outerCI = 2,   lwdInner = 1,   lwdOuter = (Sys.info()[\"sysname\"] != \"Windows\") * 0.5,   pointSize = 3,   dodgeHeight = 1,   color = \"blue\",   shape = 16,   linetype = 1,   cex = 0.8,   textAngle = 0,   numberAngle = 90,   zeroColor = \"grey\",   zeroLWD = 1,   zeroType = 2,   single = TRUE,   scales = \"fixed\",   ncol = length(unique(modelCI$Model)),   sort = c(\"natural\", \"normal\", \"magnitude\", \"size\", \"alphabetical\"),   decreasing = FALSE,   names = NULL,   numeric = FALSE,   fillColor = \"grey\",   alpha = 1/2,   horizontal = FALSE,   factors = NULL,   only = NULL,   shorten = TRUE,   intercept = TRUE,   interceptName = \"(Intercept)\",   coefficients = NULL,   predictors = NULL,   strict = FALSE,   newNames = NULL,   plot = TRUE,   drop = FALSE,   by = c(\"Coefficient\", \"Model\"),   plot.shapes = FALSE,   plot.linetypes = FALSE,   legend.position = c(\"bottom\", \"right\", \"left\", \"top\", \"none\"),   secret.weapon = FALSE,   legend.reverse = FALSE,   trans = identity )"},{"path":"/reference/multiplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot multiple coefplots — multiplot","text":"... Models plotted title name plot, NULL name given xlab x label ylab y label innerCI wide inner confidence interval , normally 1 standard deviation.  0, inner confidence interval. outerCI wide outer confidence interval , normally 2 standard deviations.  0, outer confidence interval. lwdInner thickness inner confidence interval lwdOuter thickness outer confidence interval pointSize Size coefficient point dodgeHeight Amount vertical dodging color color points lines shape shape points linetype type line drawn standard errors cex text size multiplier, currently used textAngle angle coefficient labels, 0 horizontal numberAngle angle value labels, 0 horizontal zeroColor color line indicating 0 zeroLWD thickness 0 line zeroType type 0 line, 0 mean line single logical; TRUE one plot points bars stacked, otherwise models displayed separate facets scales way axes treated faceted plot.  Can c(\"fixed\", \"free\", \"free_x\", \"free_y\") ncol number columns models plotted sort Determines sort order coefficients.  Possible values c(\"natural\", \"magnitude\", \"alphabetical\") decreasing logical; Whether coefficients ascending descending names Names models, NULL named inputs numeric logical; true factors exactly one value, displayed horizontal graph continuous confidence bounds. fillColor color confidence bounds numeric factor alpha transparency level numeric factor's confidence bound horizontal logical; plot displayed horizontally factors Vector factor variables ones shown logical; factors value determines interactions treated.  True means just variable shown interactions.  False means interactions included. shorten logical character; FALSE coefficients factor levels include variable name.  TRUE coefficients factor levels stripped variable names.  character vector variables coefficients factor levels associated variables variable names stripped. intercept logical; Whether Intercept coefficient plotted interceptName Specifies name intercept case default \"(Intercept\"). coefficients character vector specifying factor coefficients keep.  keep levels interactions, even listed. predictors character vector specifying coefficients keep.  individual coefficient can specified.  Use predictors specify entire factors strict TRUE predictors matched coefficients, interactions newNames Named character vector new names coefficients plot logical; plot drawn, false data.frame values returned drop logical; TRUE models without valid coefficients show plotted \"Coefficient\" normal multiplot plotted, \"Model\" coefficients plotted along axis one model.  plotting model one coefficient time can selected.  called secret weapon Andy Gelman. plot.shapes TRUE points different shapes different models plot.linetypes TRUE lines different shapes different models legend.position position legend, one \"left\", \"right\", \"bottom\", \"top\", \"none\" secret.weapon TRUE exactly one coefficient listed coefficients Andy Gelman's secret weapon plotted. legend.reverse Setting reverse legend multiplot matches order drawn plot trans transformation function apply values confidence intervals.  identity default.  Use invlogit binary regression.","code":""},{"path":"/reference/multiplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot multiple coefplots — multiplot","text":"ggplot object","code":""},{"path":"/reference/multiplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot multiple coefplots — multiplot","text":"Plots graph similar coefplot multiple plots . now, names provided plots appear alphabetical order names.  adjusted future iterations.  setting \"Model\" specifying exactly one variable variables one coefficient plotted repeatedly axis labeled model.  Andy Gelman's secret weapon.","code":""},{"path":[]},{"path":"/reference/multiplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot multiple coefplots — multiplot","text":"","code":"data(diamonds) model1 <- lm(price ~ carat + cut, data=diamonds) model2 <- lm(price ~ carat + cut + color, data=diamonds) model3 <- lm(price ~ carat + color, data=diamonds) multiplot(model1, model2, model3)  multiplot(model1, model2, model3, single=FALSE)  multiplot(model1, model2, model3, plot=FALSE) #>          Value Coefficient   HighInner    LowInner   HighOuter    LowOuter #> 1  -2701.37602 (Intercept) -2685.94495 -2716.80710 -2670.51387 -2732.23818 #> 2   7871.08213       carat  7885.06176  7857.10251  7899.04139  7843.12288 #> 3   1239.80045       cut.L  1265.90049  1213.70040  1292.00054  1187.60036 #> 4   -528.59779       cut.Q  -505.46541  -551.73018  -482.33302  -574.86257 #> 5    367.90995       cut.C   388.12410   347.69579   408.33826   327.48164 #> 6     74.59427       cut^4    90.83386    58.35469   107.07344    42.11510 #> 7  -3149.81846 (Intercept) -3134.06187 -3165.57504 -3118.30528 -3181.33163 #> 8   8183.74295       carat  8197.63996  8169.84595  8211.53696  8155.94894 #> 9   1243.35134       cut.L  1268.08969  1218.61298  1292.82805  1193.87462 #> 10  -531.75088       cut.Q  -509.82486  -553.67689  -487.89885  -575.60291 #> 11   372.05517       cut.C   391.21638   352.89396   410.37759   333.73275 #> 12    76.15453       cut^4    91.54283    60.76622   106.93114    45.37792 #> 13 -1579.17014     color.L -1557.44800 -1600.89228 -1535.72587 -1622.61442 #> 14  -732.84999     color.Q  -712.99047  -752.70952  -693.13094  -772.56905 #> 15  -107.40714     color.C   -88.76901  -126.04527   -70.13088  -144.68339 #> 16    81.63107     color^4    98.74669    64.51546   115.86230    47.39984 #> 17  -138.64340     color^5  -122.46129  -154.82550  -106.27919  -171.00760 #> 18  -161.08789     color^6  -146.40797  -175.76780  -131.72806  -190.44771 #> 19 -2702.23261 (Intercept) -2688.44954 -2716.01569 -2674.66646 -2729.79876 #> 20  8066.62302       carat  8080.66272  8052.58332  8094.70242  8038.54362 #> 21 -1572.19930     color.L -1549.88115 -1594.51745 -1527.56300 -1616.83560 #> 22  -741.14453     color.Q  -720.74595  -761.54312  -700.34736  -781.94170 #> 23  -122.69603     color.C  -103.55099  -141.84107   -84.40594  -160.98612 #> 24    78.76541     color^4    96.34799    61.18283   113.93057    43.60025 #> 25  -144.74008     color^5  -128.11696  -161.36321  -111.49383  -177.98634 #> 26  -180.74716     color^6  -165.66921  -195.82511  -150.59126  -210.90306 #>     Model #> 1  model1 #> 2  model1 #> 3  model1 #> 4  model1 #> 5  model1 #> 6  model1 #> 7  model2 #> 8  model2 #> 9  model2 #> 10 model2 #> 11 model2 #> 12 model2 #> 13 model2 #> 14 model2 #> 15 model2 #> 16 model2 #> 17 model2 #> 18 model2 #> 19 model3 #> 20 model3 #> 21 model3 #> 22 model3 #> 23 model3 #> 24 model3 #> 25 model3 #> 26 model3 require(reshape2) data(tips, package=\"reshape2\") mod1 <- lm(tip ~ total_bill + sex, data=tips) mod2 <- lm(tip ~ total_bill * sex, data=tips) mod3 <- lm(tip ~ total_bill * sex * day, data=tips) mod7 <- lm(tip ~ total_bill + day + time, data=tips) multiplot(mod1, mod2, mod3, mod7, single=FALSE, scales=\"free_x\")  multiplot(mod1, mod2, mod3, mod7, single=FALSE, scales=\"free_x\")  multiplot(mod1, mod2, mod3, mod7, single=FALSE, scales=\"free_x\", plot.shapes=TRUE)  multiplot(mod1, mod2, mod3, mod7, single=TRUE, scales=\"free_x\",  plot.shapes=TRUE, plot.linetypes=TRUE)  multiplot(mod1, mod2, mod3, mod7, single=TRUE, scales=\"free_x\",  plot.shapes=FALSE, plot.linetypes=TRUE, legend.position=\"bottom\")  # the secret weapon multiplot(mod1, mod2, mod3, mod7, coefficients=\"total_bill\", secret.weapon=TRUE)  # horizontal secret weapon multiplot(mod1, mod2, mod3, mod7, coefficients=\"total_bill\", by=\"Model\", horizontal=FALSE)"},{"path":"/reference/position_dodgev.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust position by dodging overlaps to the side. — position_dodgev","title":"Adjust position by dodging overlaps to the side. — position_dodgev","text":"Adjust position dodging overlaps side.","code":""},{"path":"/reference/position_dodgev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust position by dodging overlaps to the side. — position_dodgev","text":"","code":"position_dodgev(height = NULL)"},{"path":"/reference/position_dodgev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust position by dodging overlaps to the side. — position_dodgev","text":"height Dodging height, different height individual elements. useful want align narrow geoms wider geoms. See examples use case.","code":""},{"path":"/reference/position_dodgev.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adjust position by dodging overlaps to the side. — position_dodgev","text":"","code":"ggplot(mtcars, aes(factor(cyl), fill = factor(vs))) +   geom_bar(position = \"dodge\")   ggplot(diamonds, aes(price, fill = cut)) +   geom_histogram(position=\"dodge\") #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.  # see ?geom_boxplot and ?geom_bar for more examples  # To dodge items with different heights, you need to be explicit df <- data.frame(x=c(\"a\",\"a\",\"b\",\"b\"), y=2:5, g = rep(1:2, 2)) p <- ggplot(df, aes(x, y, group = g)) +   geom_bar(     stat = \"identity\", position = \"dodge\",     fill = \"grey50\", colour = \"black\"   ) p   # A line range has no height: p + geom_linerange(aes(ymin = y-1, ymax = y+1), position = \"dodge\") #> Warning: Width not defined #> ℹ Set with `position_dodge(width = ...)`  # You need to explicitly specify the height for dodging p + geom_linerange(aes(ymin = y-1, ymax = y+1),   position = position_dodge(width = 0.9))   # Similarly with error bars: p + geom_errorbar(aes(ymin = y-1, ymax = y+1), width = 0.2,   position = \"dodge\")  p + geom_errorbar(aes(ymin = y-1, ymax = y+1, height = 0.2),   position = position_dodge(width = 0.90)) #> Warning: Ignoring unknown aesthetics: height"},{"path":"/news/index.html","id":"version-128","dir":"Changelog","previous_headings":"","what":"Version 1.2.8","title":"Version 1.2.8","text":"CRAN release: 2022-01-14 Methods plotting workflows parsnip models. Fixed warning due deprecation guide argument ggplot2.","code":""},{"path":"/news/index.html","id":"version-127","dir":"Changelog","previous_headings":"","what":"Version 1.2.7","title":"Version 1.2.7","text":"CRAN release: 2021-01-14 Coefficients near zero xgboost models returned user can set tolerance level. Changed default lwdOuter 0 Windows machines 0.5 non-Windows machines. Based pull request xfim. Removed warnings calling coefplot() glmnet model. New interactive argument causes plot interactive, using plotly.","code":""},{"path":"/news/index.html","id":"version-126","dir":"Changelog","previous_headings":"","what":"Version 1.2.6","title":"Version 1.2.6","text":"CRAN release: 2018-02-07 coefpath() argument ID assigns random ID {dygraph} object one supplied. Zero-valued coefficients xgboost models returned default.","code":""},{"path":"/news/index.html","id":"version-125","dir":"Changelog","previous_headings":"","what":"Version 1.2.5","title":"Version 1.2.5","text":"CRAN release: 2018-01-04 Added coefpath plot coefficient path resulting glmnet object. coefplot now displays coefficients linear xgboost model.","code":""},{"path":"/news/index.html","id":"version-124","dir":"Changelog","previous_headings":"","what":"Version 1.2.4","title":"Version 1.2.4","text":"CRAN release: 2016-01-10 Patched accommodate changes ggplot2.","code":""},{"path":"/news/index.html","id":"version-123","dir":"Changelog","previous_headings":"","what":"Version 1.2.3","title":"Version 1.2.3","text":"Can run coefplot() data.frame properly setup like resulting coefplot(..., plot=FALSE).","code":""},{"path":"/news/index.html","id":"version-122","dir":"Changelog","previous_headings":"","what":"Version 1.2.2","title":"Version 1.2.2","text":"Support glmnet models. Added tests.","code":""},{"path":"/news/index.html","id":"version-121","dir":"Changelog","previous_headings":"","what":"Version 1.2.1","title":"Version 1.2.1","text":"mulitplot() now option reverse order legend matches ordering plot.","code":""},{"path":"/news/index.html","id":"version-120","dir":"Changelog","previous_headings":"","what":"Version 1.2.0","title":"Version 1.2.0","text":"CRAN release: 2013-05-12 Major update. codebase refactored run faster easily updated improvements adding new models. New arguments (predictors coefficients) specifying coefficients plotted indicating specific coefficients (including specific factor levels) specifying predictors created coefficients. particularly important factor variables interactions. New argument (newNames) giving new names coefficients. Mulitplot can used plot Andy Gelman’s secret weapon setting secret.weapon TRUE selecting just one coefficient coefficients. vertical secret weapon set “Model” horizontal FALSE. Faceting single model longer works. #Version 1.1.9 - Refactoring code make new models easier add. - now means certain functionality lost, shortening coefficient names, plot factor variable numerically.","code":""},{"path":"/news/index.html","id":"version-118","dir":"Changelog","previous_headings":"","what":"Version 1.1.8","title":"Version 1.1.8","text":"CRAN release: 2012-09-29 Minor changes plotting reflect change {gpplot2} 0.9.2.","code":""},{"path":"/news/index.html","id":"version-117","dir":"Changelog","previous_headings":"","what":"Version 1.1.7","title":"Version 1.1.7","text":"CRAN release: 2012-04-13 Thanks Felipe Carrillo fixed bug multiplot(). Previously, multiple models formula different data.frames inputed name (even specified names argument) one model plotted. now works expected, plotting models regardless identical formulas.","code":""},{"path":"/news/index.html","id":"version-116","dir":"Changelog","previous_headings":"","what":"Version 1.1.6","title":"Version 1.1.6","text":"CRAN release: 2012-01-29 Made change reshape2::melt() variable.name value.name behave properly new ggplot2","code":""},{"path":"/news/index.html","id":"version-115","dir":"Changelog","previous_headings":"","what":"Version 1.1.5","title":"Version 1.1.5","text":"CRAN release: 2012-01-12 Fixed glitch didn’t plot inner CI single plots multipane multiplots","code":""},{"path":"/news/index.html","id":"version-114","dir":"Changelog","previous_headings":"","what":"Version 1.1.4","title":"Version 1.1.4","text":"CRAN release: 2012-01-04 Added functionality rxLogit()","code":""},{"path":"/news/index.html","id":"version-112","dir":"Changelog","previous_headings":"","what":"Version 1.1.2","title":"Version 1.1.2","text":"CRAN release: 2011-11-19 multiplot() can plot single pane facets Changed sort argument use match.arg()","code":""},{"path":"/news/index.html","id":"version-111","dir":"Changelog","previous_headings":"","what":"Version 1.1.1","title":"Version 1.1.1","text":"Adjusting S3 dispatch coefplot.rxLinMod()","code":""},{"path":"/news/index.html","id":"version-11","dir":"Changelog","previous_headings":"","what":"Version 1.1","title":"Version 1.1","text":"CRAN release: 2011-11-02 Added multiplot() plot numerous models Moved lot code coefplot.lm() functions","code":""},{"path":"/news/index.html","id":"version-10","dir":"Changelog","previous_headings":"","what":"Version 1.0","title":"Version 1.0","text":"CRAN release: 2011-10-27 First build Methods plotting coefficients lm(), glm() rxLinMod()","code":""}]
